# Generated from inmanta.g4 by ANTLR 4.5.3
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2/")
        buf.write("\u01a9\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6")
        buf.write("\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3")
        buf.write("\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3")
        buf.write("\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3")
        buf.write("!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%")
        buf.write("\3%\3%\3%\3&\3&\7&\u0104\n&\f&\16&\u0107\13&\3\'\3\'\7")
        buf.write("\'\u010b\n\'\f\'\16\'\u010e\13\'\3(\3(\7(\u0112\n(\f(")
        buf.write("\16(\u0115\13(\3)\3)\7)\u0119\n)\f)\16)\u011c\13)\3)\3")
        buf.write(")\7)\u0120\n)\f)\16)\u0123\13)\3)\5)\u0126\n)\3)\3)\6")
        buf.write(")\u012a\n)\r)\16)\u012b\3)\5)\u012f\n)\3)\3)\7)\u0133")
        buf.write("\n)\f)\16)\u0136\13)\3)\5)\u0139\n)\3*\3*\3*\3*\7*\u013f")
        buf.write("\n*\f*\16*\u0142\13*\3*\5*\u0145\n*\3*\3*\3*\7*\u014a")
        buf.write("\n*\f*\16*\u014d\13*\3*\5*\u0150\n*\3*\3*\3*\3*\3*\7*")
        buf.write("\u0157\n*\f*\16*\u015a\13*\3*\3*\5*\u015e\n*\3*\3*\3+")
        buf.write("\3+\3+\3+\3,\3,\3,\3,\3,\7,\u016b\n,\f,\16,\u016e\13,")
        buf.write("\3,\3,\3,\3,\3-\3-\3-\7-\u0177\n-\f-\16-\u017a\13-\3-")
        buf.write("\3-\3.\3.\7.\u0180\n.\f.\16.\u0183\13.\3.\3.\3/\3/\5/")
        buf.write("\u0189\n/\3/\6/\u018c\n/\r/\16/\u018d\3\60\3\60\3\61\3")
        buf.write("\61\3\61\3\61\5\61\u0196\n\61\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\62\3\62\3\62\3\62\5\62\u01a1\n\62\3\63\3\63\3\63\3")
        buf.write("\63\3\63\3\63\3\63\2\2\64\3\3\5\4\7\5\t\6\13\7\r\b\17")
        buf.write("\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\2_\2a\2c\2e\2")
        buf.write("\3\2\f\4\2aac|\7\2//\62;C\\aac|\4\2\f\f\17\17\5\2\13\f")
        buf.write("\17\17\"\"\4\2$$^^\3\2\61\61\4\2GGgg\4\2--//\5\2\62;C")
        buf.write("Hch\n\2$$))^^ddhhppttvv\u01bf\2\3\3\2\2\2\2\5\3\2\2\2")
        buf.write("\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17")
        buf.write("\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3")
        buf.write("\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2")
        buf.write("\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3")
        buf.write("\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2")
        buf.write("\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3")
        buf.write("\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E")
        buf.write("\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2")
        buf.write("O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2")
        buf.write("\2Y\3\2\2\2\2[\3\2\2\2\3g\3\2\2\2\5o\3\2\2\2\7r\3\2\2")
        buf.write("\2\t{\3\2\2\2\13\u0082\3\2\2\2\r\u008a\3\2\2\2\17\u008c")
        buf.write("\3\2\2\2\21\u008e\3\2\2\2\23\u0092\3\2\2\2\25\u00a1\3")
        buf.write("\2\2\2\27\u00a5\3\2\2\2\31\u00ab\3\2\2\2\33\u00ad\3\2")
        buf.write("\2\2\35\u00af\3\2\2\2\37\u00b9\3\2\2\2!\u00bf\3\2\2\2")
        buf.write("#\u00c4\3\2\2\2%\u00c7\3\2\2\2\'\u00ca\3\2\2\2)\u00cd")
        buf.write("\3\2\2\2+\u00cf\3\2\2\2-\u00d1\3\2\2\2/\u00d4\3\2\2\2")
        buf.write("\61\u00d6\3\2\2\2\63\u00d9\3\2\2\2\65\u00db\3\2\2\2\67")
        buf.write("\u00df\3\2\2\29\u00e2\3\2\2\2;\u00e5\3\2\2\2=\u00e8\3")
        buf.write("\2\2\2?\u00eb\3\2\2\2A\u00ed\3\2\2\2C\u00ef\3\2\2\2E\u00f3")
        buf.write("\3\2\2\2G\u00f6\3\2\2\2I\u00fb\3\2\2\2K\u0101\3\2\2\2")
        buf.write("M\u0108\3\2\2\2O\u010f\3\2\2\2Q\u0138\3\2\2\2S\u015d\3")
        buf.write("\2\2\2U\u0161\3\2\2\2W\u0165\3\2\2\2Y\u0173\3\2\2\2[\u017d")
        buf.write("\3\2\2\2]\u0186\3\2\2\2_\u018f\3\2\2\2a\u0195\3\2\2\2")
        buf.write("c\u01a0\3\2\2\2e\u01a2\3\2\2\2gh\7v\2\2hi\7{\2\2ij\7r")
        buf.write("\2\2jk\7g\2\2kl\7f\2\2lm\7g\2\2mn\7h\2\2n\4\3\2\2\2op")
        buf.write("\7c\2\2pq\7u\2\2q\6\3\2\2\2rs\7o\2\2st\7c\2\2tu\7v\2\2")
        buf.write("uv\7e\2\2vw\7j\2\2wx\7k\2\2xy\7p\2\2yz\7i\2\2z\b\3\2\2")
        buf.write("\2{|\7g\2\2|}\7p\2\2}~\7v\2\2~\177\7k\2\2\177\u0080\7")
        buf.write("v\2\2\u0080\u0081\7{\2\2\u0081\n\3\2\2\2\u0082\u0083\7")
        buf.write("g\2\2\u0083\u0084\7z\2\2\u0084\u0085\7v\2\2\u0085\u0086")
        buf.write("\7g\2\2\u0086\u0087\7p\2\2\u0087\u0088\7f\2\2\u0088\u0089")
        buf.write("\7u\2\2\u0089\f\3\2\2\2\u008a\u008b\7.\2\2\u008b\16\3")
        buf.write("\2\2\2\u008c\u008d\7<\2\2\u008d\20\3\2\2\2\u008e\u008f")
        buf.write("\7g\2\2\u008f\u0090\7p\2\2\u0090\u0091\7f\2\2\u0091\22")
        buf.write("\3\2\2\2\u0092\u0093\7k\2\2\u0093\u0094\7o\2\2\u0094\u0095")
        buf.write("\7r\2\2\u0095\u0096\7n\2\2\u0096\u0097\7g\2\2\u0097\u0098")
        buf.write("\7o\2\2\u0098\u0099\7g\2\2\u0099\u009a\7p\2\2\u009a\u009b")
        buf.write("\7v\2\2\u009b\u009c\7c\2\2\u009c\u009d\7v\2\2\u009d\u009e")
        buf.write("\7k\2\2\u009e\u009f\7q\2\2\u009f\u00a0\7p\2\2\u00a0\24")
        buf.write("\3\2\2\2\u00a1\u00a2\7h\2\2\u00a2\u00a3\7q\2\2\u00a3\u00a4")
        buf.write("\7t\2\2\u00a4\26\3\2\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7")
        buf.write("\7p\2\2\u00a7\u00a8\7f\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa")
        buf.write("\7z\2\2\u00aa\30\3\2\2\2\u00ab\u00ac\7*\2\2\u00ac\32\3")
        buf.write("\2\2\2\u00ad\u00ae\7+\2\2\u00ae\34\3\2\2\2\u00af\u00b0")
        buf.write("\7k\2\2\u00b0\u00b1\7o\2\2\u00b1\u00b2\7r\2\2\u00b2\u00b3")
        buf.write("\7n\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5\7o\2\2\u00b5\u00b6")
        buf.write("\7g\2\2\u00b6\u00b7\7p\2\2\u00b7\u00b8\7v\2\2\u00b8\36")
        buf.write("\3\2\2\2\u00b9\u00ba\7w\2\2\u00ba\u00bb\7u\2\2\u00bb\u00bc")
        buf.write("\7k\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7i\2\2\u00be \3")
        buf.write("\2\2\2\u00bf\u00c0\7y\2\2\u00c0\u00c1\7j\2\2\u00c1\u00c2")
        buf.write("\7g\2\2\u00c2\u00c3\7p\2\2\u00c3\"\3\2\2\2\u00c4\u00c5")
        buf.write("\7>\2\2\u00c5\u00c6\7/\2\2\u00c6$\3\2\2\2\u00c7\u00c8")
        buf.write("\7/\2\2\u00c8\u00c9\7@\2\2\u00c9&\3\2\2\2\u00ca\u00cb")
        buf.write("\7/\2\2\u00cb\u00cc\7/\2\2\u00cc(\3\2\2\2\u00cd\u00ce")
        buf.write("\7]\2\2\u00ce*\3\2\2\2\u00cf\u00d0\7_\2\2\u00d0,\3\2\2")
        buf.write("\2\u00d1\u00d2\7k\2\2\u00d2\u00d3\7p\2\2\u00d3.\3\2\2")
        buf.write("\2\u00d4\u00d5\7?\2\2\u00d5\60\3\2\2\2\u00d6\u00d7\7<")
        buf.write("\2\2\u00d7\u00d8\7<\2\2\u00d8\62\3\2\2\2\u00d9\u00da\7")
        buf.write("\60\2\2\u00da\64\3\2\2\2\u00db\u00dc\7p\2\2\u00dc\u00dd")
        buf.write("\7q\2\2\u00dd\u00de\7v\2\2\u00de\66\3\2\2\2\u00df\u00e0")
        buf.write("\7?\2\2\u00e0\u00e1\7?\2\2\u00e18\3\2\2\2\u00e2\u00e3")
        buf.write("\7#\2\2\u00e3\u00e4\7?\2\2\u00e4:\3\2\2\2\u00e5\u00e6")
        buf.write("\7>\2\2\u00e6\u00e7\7?\2\2\u00e7<\3\2\2\2\u00e8\u00e9")
        buf.write("\7@\2\2\u00e9\u00ea\7?\2\2\u00ea>\3\2\2\2\u00eb\u00ec")
        buf.write("\7>\2\2\u00ec@\3\2\2\2\u00ed\u00ee\7@\2\2\u00eeB\3\2\2")
        buf.write("\2\u00ef\u00f0\7c\2\2\u00f0\u00f1\7p\2\2\u00f1\u00f2\7")
        buf.write("f\2\2\u00f2D\3\2\2\2\u00f3\u00f4\7q\2\2\u00f4\u00f5\7")
        buf.write("t\2\2\u00f5F\3\2\2\2\u00f6\u00f7\7v\2\2\u00f7\u00f8\7")
        buf.write("t\2\2\u00f8\u00f9\7w\2\2\u00f9\u00fa\7g\2\2\u00faH\3\2")
        buf.write("\2\2\u00fb\u00fc\7h\2\2\u00fc\u00fd\7c\2\2\u00fd\u00fe")
        buf.write("\7n\2\2\u00fe\u00ff\7u\2\2\u00ff\u0100\7g\2\2\u0100J\3")
        buf.write("\2\2\2\u0101\u0105\t\2\2\2\u0102\u0104\t\3\2\2\u0103\u0102")
        buf.write("\3\2\2\2\u0104\u0107\3\2\2\2\u0105\u0103\3\2\2\2\u0105")
        buf.write("\u0106\3\2\2\2\u0106L\3\2\2\2\u0107\u0105\3\2\2\2\u0108")
        buf.write("\u010c\4C\\\2\u0109\u010b\t\3\2\2\u010a\u0109\3\2\2\2")
        buf.write("\u010b\u010e\3\2\2\2\u010c\u010a\3\2\2\2\u010c\u010d\3")
        buf.write("\2\2\2\u010dN\3\2\2\2\u010e\u010c\3\2\2\2\u010f\u0113")
        buf.write("\4\62;\2\u0110\u0112\4\62;\2\u0111\u0110\3\2\2\2\u0112")
        buf.write("\u0115\3\2\2\2\u0113\u0111\3\2\2\2\u0113\u0114\3\2\2\2")
        buf.write("\u0114P\3\2\2\2\u0115\u0113\3\2\2\2\u0116\u011a\4\62;")
        buf.write("\2\u0117\u0119\4\62;\2\u0118\u0117\3\2\2\2\u0119\u011c")
        buf.write("\3\2\2\2\u011a\u0118\3\2\2\2\u011a\u011b\3\2\2\2\u011b")
        buf.write("\u011d\3\2\2\2\u011c\u011a\3\2\2\2\u011d\u0121\7\60\2")
        buf.write("\2\u011e\u0120\4\62;\2\u011f\u011e\3\2\2\2\u0120\u0123")
        buf.write("\3\2\2\2\u0121\u011f\3\2\2\2\u0121\u0122\3\2\2\2\u0122")
        buf.write("\u0125\3\2\2\2\u0123\u0121\3\2\2\2\u0124\u0126\5]/\2\u0125")
        buf.write("\u0124\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0139\3\2\2\2")
        buf.write("\u0127\u0129\7\60\2\2\u0128\u012a\4\62;\2\u0129\u0128")
        buf.write("\3\2\2\2\u012a\u012b\3\2\2\2\u012b\u0129\3\2\2\2\u012b")
        buf.write("\u012c\3\2\2\2\u012c\u012e\3\2\2\2\u012d\u012f\5]/\2\u012e")
        buf.write("\u012d\3\2\2\2\u012e\u012f\3\2\2\2\u012f\u0139\3\2\2\2")
        buf.write("\u0130\u0134\4\62;\2\u0131\u0133\4\62;\2\u0132\u0131\3")
        buf.write("\2\2\2\u0133\u0136\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135")
        buf.write("\3\2\2\2\u0135\u0137\3\2\2\2\u0136\u0134\3\2\2\2\u0137")
        buf.write("\u0139\5]/\2\u0138\u0116\3\2\2\2\u0138\u0127\3\2\2\2\u0138")
        buf.write("\u0130\3\2\2\2\u0139R\3\2\2\2\u013a\u013b\7\61\2\2\u013b")
        buf.write("\u013c\7\61\2\2\u013c\u0140\3\2\2\2\u013d\u013f\n\4\2")
        buf.write("\2\u013e\u013d\3\2\2\2\u013f\u0142\3\2\2\2\u0140\u013e")
        buf.write("\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0144\3\2\2\2\u0142")
        buf.write("\u0140\3\2\2\2\u0143\u0145\7\17\2\2\u0144\u0143\3\2\2")
        buf.write("\2\u0144\u0145\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u015e")
        buf.write("\7\f\2\2\u0147\u014b\7%\2\2\u0148\u014a\n\4\2\2\u0149")
        buf.write("\u0148\3\2\2\2\u014a\u014d\3\2\2\2\u014b\u0149\3\2\2\2")
        buf.write("\u014b\u014c\3\2\2\2\u014c\u014f\3\2\2\2\u014d\u014b\3")
        buf.write("\2\2\2\u014e\u0150\7\17\2\2\u014f\u014e\3\2\2\2\u014f")
        buf.write("\u0150\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u015e\7\f\2\2")
        buf.write("\u0152\u0153\7\61\2\2\u0153\u0154\7,\2\2\u0154\u0158\3")
        buf.write("\2\2\2\u0155\u0157\13\2\2\2\u0156\u0155\3\2\2\2\u0157")
        buf.write("\u015a\3\2\2\2\u0158\u0156\3\2\2\2\u0158\u0159\3\2\2\2")
        buf.write("\u0159\u015b\3\2\2\2\u015a\u0158\3\2\2\2\u015b\u015c\7")
        buf.write(",\2\2\u015c\u015e\7\61\2\2\u015d\u013a\3\2\2\2\u015d\u0147")
        buf.write("\3\2\2\2\u015d\u0152\3\2\2\2\u015e\u015f\3\2\2\2\u015f")
        buf.write("\u0160\b*\2\2\u0160T\3\2\2\2\u0161\u0162\t\5\2\2\u0162")
        buf.write("\u0163\3\2\2\2\u0163\u0164\b+\2\2\u0164V\3\2\2\2\u0165")
        buf.write("\u0166\7$\2\2\u0166\u0167\7$\2\2\u0167\u0168\7$\2\2\u0168")
        buf.write("\u016c\3\2\2\2\u0169\u016b\13\2\2\2\u016a\u0169\3\2\2")
        buf.write("\2\u016b\u016e\3\2\2\2\u016c\u016a\3\2\2\2\u016c\u016d")
        buf.write("\3\2\2\2\u016d\u016f\3\2\2\2\u016e\u016c\3\2\2\2\u016f")
        buf.write("\u0170\7$\2\2\u0170\u0171\7$\2\2\u0171\u0172\7$\2\2\u0172")
        buf.write("X\3\2\2\2\u0173\u0178\7$\2\2\u0174\u0177\5a\61\2\u0175")
        buf.write("\u0177\n\6\2\2\u0176\u0174\3\2\2\2\u0176\u0175\3\2\2\2")
        buf.write("\u0177\u017a\3\2\2\2\u0178\u0176\3\2\2\2\u0178\u0179\3")
        buf.write("\2\2\2\u0179\u017b\3\2\2\2\u017a\u0178\3\2\2\2\u017b\u017c")
        buf.write("\7$\2\2\u017cZ\3\2\2\2\u017d\u0181\7\61\2\2\u017e\u0180")
        buf.write("\n\7\2\2\u017f\u017e\3\2\2\2\u0180\u0183\3\2\2\2\u0181")
        buf.write("\u017f\3\2\2\2\u0181\u0182\3\2\2\2\u0182\u0184\3\2\2\2")
        buf.write("\u0183\u0181\3\2\2\2\u0184\u0185\7\61\2\2\u0185\\\3\2")
        buf.write("\2\2\u0186\u0188\t\b\2\2\u0187\u0189\t\t\2\2\u0188\u0187")
        buf.write("\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018b\3\2\2\2\u018a")
        buf.write("\u018c\4\62;\2\u018b\u018a\3\2\2\2\u018c\u018d\3\2\2\2")
        buf.write("\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e^\3\2\2")
        buf.write("\2\u018f\u0190\t\n\2\2\u0190`\3\2\2\2\u0191\u0192\7^\2")
        buf.write("\2\u0192\u0196\t\13\2\2\u0193\u0196\5e\63\2\u0194\u0196")
        buf.write("\5c\62\2\u0195\u0191\3\2\2\2\u0195\u0193\3\2\2\2\u0195")
        buf.write("\u0194\3\2\2\2\u0196b\3\2\2\2\u0197\u0198\7^\2\2\u0198")
        buf.write("\u0199\4\62\65\2\u0199\u019a\4\629\2\u019a\u01a1\4\62")
        buf.write("9\2\u019b\u019c\7^\2\2\u019c\u019d\4\629\2\u019d\u01a1")
        buf.write("\4\629\2\u019e\u019f\7^\2\2\u019f\u01a1\4\629\2\u01a0")
        buf.write("\u0197\3\2\2\2\u01a0\u019b\3\2\2\2\u01a0\u019e\3\2\2\2")
        buf.write("\u01a1d\3\2\2\2\u01a2\u01a3\7^\2\2\u01a3\u01a4\7w\2\2")
        buf.write("\u01a4\u01a5\5_\60\2\u01a5\u01a6\5_\60\2\u01a6\u01a7\5")
        buf.write("_\60\2\u01a7\u01a8\5_\60\2\u01a8f\3\2\2\2\33\2\u0105\u010c")
        buf.write("\u0113\u011a\u0121\u0125\u012b\u012e\u0134\u0138\u0140")
        buf.write("\u0144\u014b\u014f\u0158\u015d\u016c\u0176\u0178\u0181")
        buf.write("\u0188\u018d\u0195\u01a0\3\b\2\2")
        return buf.getvalue()


class inmantaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    TRUE = 35
    FALSE = 36
    ID = 37
    CLASS_ID = 38
    INT = 39
    FLOAT = 40
    COMMENT = 41
    WS = 42
    ML_STRING = 43
    STRING = 44
    REGEX = 45

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'typedef'", "'as'", "'matching'", "'entity'", "'extends'", 
            "','", "':'", "'end'", "'implementation'", "'for'", "'index'", 
            "'('", "')'", "'implement'", "'using'", "'when'", "'<-'", "'->'", 
            "'--'", "'['", "']'", "'in'", "'='", "'::'", "'.'", "'not'", 
            "'=='", "'!='", "'<='", "'>='", "'<'", "'>'", "'and'", "'or'", 
            "'true'", "'false'" ]

    symbolicNames = [ "<INVALID>",
            "TRUE", "FALSE", "ID", "CLASS_ID", "INT", "FLOAT", "COMMENT", 
            "WS", "ML_STRING", "STRING", "REGEX" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "TRUE", "FALSE", "ID", "CLASS_ID", "INT", 
                  "FLOAT", "COMMENT", "WS", "ML_STRING", "STRING", "REGEX", 
                  "EXPONENT", "HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", "UNICODE_ESC" ]

    grammarFileName = "inmanta.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


