// Generated from /home/wouter/inc/impera/src/impera/parser/inmanta.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class inmantaLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__33=1, T__32=2, T__31=3, T__30=4, T__29=5, T__28=6, T__27=7, T__26=8, 
		T__25=9, T__24=10, T__23=11, T__22=12, T__21=13, T__20=14, T__19=15, T__18=16, 
		T__17=17, T__16=18, T__15=19, T__14=20, T__13=21, T__12=22, T__11=23, 
		T__10=24, T__9=25, T__8=26, T__7=27, T__6=28, T__5=29, T__4=30, T__3=31, 
		T__2=32, T__1=33, T__0=34, TRUE=35, FALSE=36, ID=37, CLASS_ID=38, INT=39, 
		FLOAT=40, COMMENT1=41, WS=42, ML_STRING=43, STRING=44, REGEX=45;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'as'", "'!='", "'implementation'", "'using'", "'::'", "'='", "'extends'", 
		"'entity'", "'for'", "'<='", "'when'", "'('", "','", "'.'", "'->'", "'<-'", 
		"':'", "'>='", "'['", "'<'", "'=='", "'--'", "']'", "'>'", "'matching'", 
		"'or'", "'implement'", "'in'", "'typedef'", "'end'", "')'", "'and'", "'not'", 
		"'index'", "'true'", "'false'", "ID", "CLASS_ID", "INT", "FLOAT", "COMMENT1", 
		"WS", "ML_STRING", "STRING", "REGEX"
	};
	public static final String[] ruleNames = {
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "TRUE", "FALSE", "ID", "CLASS_ID", "INT", "FLOAT", "COMMENT1", 
		"WS", "ML_STRING", "STRING", "REGEX", "EXPONENT", "HEX_DIGIT", "ESC_SEQ", 
		"OCTAL_ESC", "UNICODE_ESC"
	};


	public inmantaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "inmanta.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 40: COMMENT1_action((RuleContext)_localctx, actionIndex); break;

		case 41: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void COMMENT1_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2/\u01a9\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2\3\2"+
		"\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3"+
		"\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b"+
		"\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13"+
		"\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3"+
		"\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3"+
		"\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3"+
		"\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3"+
		"\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3"+
		"\37\3\37\3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3$"+
		"\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\7&\u0104\n&\f&\16&\u0107\13&\3\'\3\'\7"+
		"\'\u010b\n\'\f\'\16\'\u010e\13\'\3(\3(\7(\u0112\n(\f(\16(\u0115\13(\3"+
		")\3)\7)\u0119\n)\f)\16)\u011c\13)\3)\3)\7)\u0120\n)\f)\16)\u0123\13)\3"+
		")\5)\u0126\n)\3)\3)\6)\u012a\n)\r)\16)\u012b\3)\5)\u012f\n)\3)\3)\7)\u0133"+
		"\n)\f)\16)\u0136\13)\3)\5)\u0139\n)\3*\3*\3*\3*\7*\u013f\n*\f*\16*\u0142"+
		"\13*\3*\5*\u0145\n*\3*\3*\3*\7*\u014a\n*\f*\16*\u014d\13*\3*\5*\u0150"+
		"\n*\3*\3*\3*\3*\3*\7*\u0157\n*\f*\16*\u015a\13*\3*\3*\5*\u015e\n*\3*\3"+
		"*\3+\3+\3+\3+\3,\3,\3,\3,\3,\7,\u016b\n,\f,\16,\u016e\13,\3,\3,\3,\3,"+
		"\3-\3-\3-\7-\u0177\n-\f-\16-\u017a\13-\3-\3-\3.\3.\7.\u0180\n.\f.\16."+
		"\u0183\13.\3.\3.\3/\3/\5/\u0189\n/\3/\6/\u018c\n/\r/\16/\u018d\3\60\3"+
		"\60\3\61\3\61\3\61\3\61\5\61\u0196\n\61\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\5\62\u01a1\n\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\4\u0158"+
		"\u016c\64\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25"+
		"\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)"+
		"\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= "+
		"\1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\2U,\3W-\1Y.\1[/\1]\2\1"+
		"_\2\1a\2\1c\2\1e\2\1\3\2\f\4\2aac|\7\2//\62;C\\aac|\4\2\f\f\17\17\5\2"+
		"\13\f\17\17\"\"\4\2$$^^\3\2\61\61\4\2GGgg\4\2--//\5\2\62;CHch\n\2$$))"+
		"^^ddhhppttvv\u01bf\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13"+
		"\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2"+
		"\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2"+
		"!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3"+
		"\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2"+
		"\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E"+
		"\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2"+
		"\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\3g\3\2\2\2"+
		"\5j\3\2\2\2\7m\3\2\2\2\t|\3\2\2\2\13\u0082\3\2\2\2\r\u0085\3\2\2\2\17"+
		"\u0087\3\2\2\2\21\u008f\3\2\2\2\23\u0096\3\2\2\2\25\u009a\3\2\2\2\27\u009d"+
		"\3\2\2\2\31\u00a2\3\2\2\2\33\u00a4\3\2\2\2\35\u00a6\3\2\2\2\37\u00a8\3"+
		"\2\2\2!\u00ab\3\2\2\2#\u00ae\3\2\2\2%\u00b0\3\2\2\2\'\u00b3\3\2\2\2)\u00b5"+
		"\3\2\2\2+\u00b7\3\2\2\2-\u00ba\3\2\2\2/\u00bd\3\2\2\2\61\u00bf\3\2\2\2"+
		"\63\u00c1\3\2\2\2\65\u00ca\3\2\2\2\67\u00cd\3\2\2\29\u00d7\3\2\2\2;\u00da"+
		"\3\2\2\2=\u00e2\3\2\2\2?\u00e6\3\2\2\2A\u00e8\3\2\2\2C\u00ec\3\2\2\2E"+
		"\u00f0\3\2\2\2G\u00f6\3\2\2\2I\u00fb\3\2\2\2K\u0101\3\2\2\2M\u0108\3\2"+
		"\2\2O\u010f\3\2\2\2Q\u0138\3\2\2\2S\u015d\3\2\2\2U\u0161\3\2\2\2W\u0165"+
		"\3\2\2\2Y\u0173\3\2\2\2[\u017d\3\2\2\2]\u0186\3\2\2\2_\u018f\3\2\2\2a"+
		"\u0195\3\2\2\2c\u01a0\3\2\2\2e\u01a2\3\2\2\2gh\7c\2\2hi\7u\2\2i\4\3\2"+
		"\2\2jk\7#\2\2kl\7?\2\2l\6\3\2\2\2mn\7k\2\2no\7o\2\2op\7r\2\2pq\7n\2\2"+
		"qr\7g\2\2rs\7o\2\2st\7g\2\2tu\7p\2\2uv\7v\2\2vw\7c\2\2wx\7v\2\2xy\7k\2"+
		"\2yz\7q\2\2z{\7p\2\2{\b\3\2\2\2|}\7w\2\2}~\7u\2\2~\177\7k\2\2\177\u0080"+
		"\7p\2\2\u0080\u0081\7i\2\2\u0081\n\3\2\2\2\u0082\u0083\7<\2\2\u0083\u0084"+
		"\7<\2\2\u0084\f\3\2\2\2\u0085\u0086\7?\2\2\u0086\16\3\2\2\2\u0087\u0088"+
		"\7g\2\2\u0088\u0089\7z\2\2\u0089\u008a\7v\2\2\u008a\u008b\7g\2\2\u008b"+
		"\u008c\7p\2\2\u008c\u008d\7f\2\2\u008d\u008e\7u\2\2\u008e\20\3\2\2\2\u008f"+
		"\u0090\7g\2\2\u0090\u0091\7p\2\2\u0091\u0092\7v\2\2\u0092\u0093\7k\2\2"+
		"\u0093\u0094\7v\2\2\u0094\u0095\7{\2\2\u0095\22\3\2\2\2\u0096\u0097\7"+
		"h\2\2\u0097\u0098\7q\2\2\u0098\u0099\7t\2\2\u0099\24\3\2\2\2\u009a\u009b"+
		"\7>\2\2\u009b\u009c\7?\2\2\u009c\26\3\2\2\2\u009d\u009e\7y\2\2\u009e\u009f"+
		"\7j\2\2\u009f\u00a0\7g\2\2\u00a0\u00a1\7p\2\2\u00a1\30\3\2\2\2\u00a2\u00a3"+
		"\7*\2\2\u00a3\32\3\2\2\2\u00a4\u00a5\7.\2\2\u00a5\34\3\2\2\2\u00a6\u00a7"+
		"\7\60\2\2\u00a7\36\3\2\2\2\u00a8\u00a9\7/\2\2\u00a9\u00aa\7@\2\2\u00aa"+
		" \3\2\2\2\u00ab\u00ac\7>\2\2\u00ac\u00ad\7/\2\2\u00ad\"\3\2\2\2\u00ae"+
		"\u00af\7<\2\2\u00af$\3\2\2\2\u00b0\u00b1\7@\2\2\u00b1\u00b2\7?\2\2\u00b2"+
		"&\3\2\2\2\u00b3\u00b4\7]\2\2\u00b4(\3\2\2\2\u00b5\u00b6\7>\2\2\u00b6*"+
		"\3\2\2\2\u00b7\u00b8\7?\2\2\u00b8\u00b9\7?\2\2\u00b9,\3\2\2\2\u00ba\u00bb"+
		"\7/\2\2\u00bb\u00bc\7/\2\2\u00bc.\3\2\2\2\u00bd\u00be\7_\2\2\u00be\60"+
		"\3\2\2\2\u00bf\u00c0\7@\2\2\u00c0\62\3\2\2\2\u00c1\u00c2\7o\2\2\u00c2"+
		"\u00c3\7c\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5\7e\2\2\u00c5\u00c6\7j\2\2"+
		"\u00c6\u00c7\7k\2\2\u00c7\u00c8\7p\2\2\u00c8\u00c9\7i\2\2\u00c9\64\3\2"+
		"\2\2\u00ca\u00cb\7q\2\2\u00cb\u00cc\7t\2\2\u00cc\66\3\2\2\2\u00cd\u00ce"+
		"\7k\2\2\u00ce\u00cf\7o\2\2\u00cf\u00d0\7r\2\2\u00d0\u00d1\7n\2\2\u00d1"+
		"\u00d2\7g\2\2\u00d2\u00d3\7o\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7p\2\2"+
		"\u00d5\u00d6\7v\2\2\u00d68\3\2\2\2\u00d7\u00d8\7k\2\2\u00d8\u00d9\7p\2"+
		"\2\u00d9:\3\2\2\2\u00da\u00db\7v\2\2\u00db\u00dc\7{\2\2\u00dc\u00dd\7"+
		"r\2\2\u00dd\u00de\7g\2\2\u00de\u00df\7f\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1"+
		"\7h\2\2\u00e1<\3\2\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7p\2\2\u00e4\u00e5"+
		"\7f\2\2\u00e5>\3\2\2\2\u00e6\u00e7\7+\2\2\u00e7@\3\2\2\2\u00e8\u00e9\7"+
		"c\2\2\u00e9\u00ea\7p\2\2\u00ea\u00eb\7f\2\2\u00ebB\3\2\2\2\u00ec\u00ed"+
		"\7p\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7v\2\2\u00efD\3\2\2\2\u00f0\u00f1"+
		"\7k\2\2\u00f1\u00f2\7p\2\2\u00f2\u00f3\7f\2\2\u00f3\u00f4\7g\2\2\u00f4"+
		"\u00f5\7z\2\2\u00f5F\3\2\2\2\u00f6\u00f7\7v\2\2\u00f7\u00f8\7t\2\2\u00f8"+
		"\u00f9\7w\2\2\u00f9\u00fa\7g\2\2\u00faH\3\2\2\2\u00fb\u00fc\7h\2\2\u00fc"+
		"\u00fd\7c\2\2\u00fd\u00fe\7n\2\2\u00fe\u00ff\7u\2\2\u00ff\u0100\7g\2\2"+
		"\u0100J\3\2\2\2\u0101\u0105\t\2\2\2\u0102\u0104\t\3\2\2\u0103\u0102\3"+
		"\2\2\2\u0104\u0107\3\2\2\2\u0105\u0103\3\2\2\2\u0105\u0106\3\2\2\2\u0106"+
		"L\3\2\2\2\u0107\u0105\3\2\2\2\u0108\u010c\4C\\\2\u0109\u010b\t\3\2\2\u010a"+
		"\u0109\3\2\2\2\u010b\u010e\3\2\2\2\u010c\u010a\3\2\2\2\u010c\u010d\3\2"+
		"\2\2\u010dN\3\2\2\2\u010e\u010c\3\2\2\2\u010f\u0113\4\62;\2\u0110\u0112"+
		"\4\62;\2\u0111\u0110\3\2\2\2\u0112\u0115\3\2\2\2\u0113\u0111\3\2\2\2\u0113"+
		"\u0114\3\2\2\2\u0114P\3\2\2\2\u0115\u0113\3\2\2\2\u0116\u011a\4\62;\2"+
		"\u0117\u0119\4\62;\2\u0118\u0117\3\2\2\2\u0119\u011c\3\2\2\2\u011a\u0118"+
		"\3\2\2\2\u011a\u011b\3\2\2\2\u011b\u011d\3\2\2\2\u011c\u011a\3\2\2\2\u011d"+
		"\u0121\7\60\2\2\u011e\u0120\4\62;\2\u011f\u011e\3\2\2\2\u0120\u0123\3"+
		"\2\2\2\u0121\u011f\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u0125\3\2\2\2\u0123"+
		"\u0121\3\2\2\2\u0124\u0126\5]/\2\u0125\u0124\3\2\2\2\u0125\u0126\3\2\2"+
		"\2\u0126\u0139\3\2\2\2\u0127\u0129\7\60\2\2\u0128\u012a\4\62;\2\u0129"+
		"\u0128\3\2\2\2\u012a\u012b\3\2\2\2\u012b\u0129\3\2\2\2\u012b\u012c\3\2"+
		"\2\2\u012c\u012e\3\2\2\2\u012d\u012f\5]/\2\u012e\u012d\3\2\2\2\u012e\u012f"+
		"\3\2\2\2\u012f\u0139\3\2\2\2\u0130\u0134\4\62;\2\u0131\u0133\4\62;\2\u0132"+
		"\u0131\3\2\2\2\u0133\u0136\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135\3\2"+
		"\2\2\u0135\u0137\3\2\2\2\u0136\u0134\3\2\2\2\u0137\u0139\5]/\2\u0138\u0116"+
		"\3\2\2\2\u0138\u0127\3\2\2\2\u0138\u0130\3\2\2\2\u0139R\3\2\2\2\u013a"+
		"\u013b\7\61\2\2\u013b\u013c\7\61\2\2\u013c\u0140\3\2\2\2\u013d\u013f\n"+
		"\4\2\2\u013e\u013d\3\2\2\2\u013f\u0142\3\2\2\2\u0140\u013e\3\2\2\2\u0140"+
		"\u0141\3\2\2\2\u0141\u0144\3\2\2\2\u0142\u0140\3\2\2\2\u0143\u0145\7\17"+
		"\2\2\u0144\u0143\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0146\3\2\2\2\u0146"+
		"\u015e\7\f\2\2\u0147\u014b\7%\2\2\u0148\u014a\n\4\2\2\u0149\u0148\3\2"+
		"\2\2\u014a\u014d\3\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c"+
		"\u014f\3\2\2\2\u014d\u014b\3\2\2\2\u014e\u0150\7\17\2\2\u014f\u014e\3"+
		"\2\2\2\u014f\u0150\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u015e\7\f\2\2\u0152"+
		"\u0153\7\61\2\2\u0153\u0154\7,\2\2\u0154\u0158\3\2\2\2\u0155\u0157\13"+
		"\2\2\2\u0156\u0155\3\2\2\2\u0157\u015a\3\2\2\2\u0158\u0159\3\2\2\2\u0158"+
		"\u0156\3\2\2\2\u0159\u015b\3\2\2\2\u015a\u0158\3\2\2\2\u015b\u015c\7,"+
		"\2\2\u015c\u015e\7\61\2\2\u015d\u013a\3\2\2\2\u015d\u0147\3\2\2\2\u015d"+
		"\u0152\3\2\2\2\u015e\u015f\3\2\2\2\u015f\u0160\b*\2\2\u0160T\3\2\2\2\u0161"+
		"\u0162\t\5\2\2\u0162\u0163\3\2\2\2\u0163\u0164\b+\3\2\u0164V\3\2\2\2\u0165"+
		"\u0166\7$\2\2\u0166\u0167\7$\2\2\u0167\u0168\7$\2\2\u0168\u016c\3\2\2"+
		"\2\u0169\u016b\13\2\2\2\u016a\u0169\3\2\2\2\u016b\u016e\3\2\2\2\u016c"+
		"\u016d\3\2\2\2\u016c\u016a\3\2\2\2\u016d\u016f\3\2\2\2\u016e\u016c\3\2"+
		"\2\2\u016f\u0170\7$\2\2\u0170\u0171\7$\2\2\u0171\u0172\7$\2\2\u0172X\3"+
		"\2\2\2\u0173\u0178\7$\2\2\u0174\u0177\5a\61\2\u0175\u0177\n\6\2\2\u0176"+
		"\u0174\3\2\2\2\u0176\u0175\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3\2"+
		"\2\2\u0178\u0179\3\2\2\2\u0179\u017b\3\2\2\2\u017a\u0178\3\2\2\2\u017b"+
		"\u017c\7$\2\2\u017cZ\3\2\2\2\u017d\u0181\7\61\2\2\u017e\u0180\n\7\2\2"+
		"\u017f\u017e\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u017f\3\2\2\2\u0181\u0182"+
		"\3\2\2\2\u0182\u0184\3\2\2\2\u0183\u0181\3\2\2\2\u0184\u0185\7\61\2\2"+
		"\u0185\\\3\2\2\2\u0186\u0188\t\b\2\2\u0187\u0189\t\t\2\2\u0188\u0187\3"+
		"\2\2\2\u0188\u0189\3\2\2\2\u0189\u018b\3\2\2\2\u018a\u018c\4\62;\2\u018b"+
		"\u018a\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2"+
		"\2\2\u018e^\3\2\2\2\u018f\u0190\t\n\2\2\u0190`\3\2\2\2\u0191\u0192\7^"+
		"\2\2\u0192\u0196\t\13\2\2\u0193\u0196\5e\63\2\u0194\u0196\5c\62\2\u0195"+
		"\u0191\3\2\2\2\u0195\u0193\3\2\2\2\u0195\u0194\3\2\2\2\u0196b\3\2\2\2"+
		"\u0197\u0198\7^\2\2\u0198\u0199\4\62\65\2\u0199\u019a\4\629\2\u019a\u01a1"+
		"\4\629\2\u019b\u019c\7^\2\2\u019c\u019d\4\629\2\u019d\u01a1\4\629\2\u019e"+
		"\u019f\7^\2\2\u019f\u01a1\4\629\2\u01a0\u0197\3\2\2\2\u01a0\u019b\3\2"+
		"\2\2\u01a0\u019e\3\2\2\2\u01a1d\3\2\2\2\u01a2\u01a3\7^\2\2\u01a3\u01a4"+
		"\7w\2\2\u01a4\u01a5\5_\60\2\u01a5\u01a6\5_\60\2\u01a6\u01a7\5_\60\2\u01a7"+
		"\u01a8\5_\60\2\u01a8f\3\2\2\2\33\2\u0105\u010c\u0113\u011a\u0121\u0125"+
		"\u012b\u012e\u0134\u0138\u0140\u0144\u014b\u014f\u0158\u015d\u016c\u0176"+
		"\u0178\u0181\u0188\u018d\u0195\u01a0";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}