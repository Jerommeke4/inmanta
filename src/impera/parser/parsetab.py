
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F6FB983AEA87CDD36A8DCDD27DCAA4BF'
    
_lr_action_items = {'TYPEDEF':([0,1,2,4,5,8,11,12,15,16,18,20,21,23,25,26,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,75,79,80,81,86,94,97,99,102,103,106,120,125,128,132,134,136,138,144,145,148,150,153,154,155,156,157,158,159,162,166,168,171,172,173,174,175,176,177,],[13,-12,-7,-10,-11,-6,13,-14,-9,-91,-5,-3,-88,-13,-4,-8,-92,-70,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-32,-17,-81,-61,-64,-19,-23,-43,-80,-29,-35,-65,-22,-24,-31,-34,-44,-18,-66,-20,-21,-51,-54,-41,-53,-42,-79,-30,-33,-36,-70,-52,-45,-46,-47,-48,-82,-50,-49,]),'IMPLEMENT':([0,1,2,4,5,8,11,12,15,16,18,20,21,23,25,26,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,75,79,80,81,86,94,97,99,102,103,106,120,125,128,132,134,136,138,144,145,148,150,153,154,155,156,157,158,159,162,166,168,171,172,173,174,175,176,177,],[14,-12,-7,-10,-11,-6,14,-14,-9,-91,-5,-3,-88,-13,-4,-8,-92,-70,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-32,-17,-81,-61,-64,-19,-23,-43,-80,-29,-35,-65,-22,-24,-31,-34,-44,-18,-66,-20,-21,-51,-54,-41,-53,-42,-79,-30,-33,-36,-70,-52,-45,-46,-47,-48,-82,-50,-49,]),'MLS':([0,1,2,4,5,8,11,12,15,16,18,20,21,23,25,26,29,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,65,66,68,70,75,76,78,79,80,81,82,86,87,94,97,99,102,103,106,120,121,125,128,129,131,132,134,136,138,144,145,147,148,149,150,152,153,154,155,156,157,158,159,162,166,168,169,170,171,172,173,174,175,176,177,],[16,-12,-7,-10,-11,-6,16,-14,-9,16,-5,-3,-88,-13,-4,-8,16,-92,16,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,16,-60,-87,16,-32,16,16,-17,-81,-61,16,-64,16,-19,-23,-43,-80,-29,-35,-65,16,-22,-24,16,16,-31,-34,-44,-18,-66,-20,16,-21,16,-51,16,-54,-41,-53,-42,-79,-30,-33,-36,16,-52,16,16,-45,-46,-47,-48,-82,-50,-49,]),'FLOAT':([29,41,65,78,82,87,129,131,147,149,152,166,169,170,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'[':([10,28,29,41,56,65,67,78,82,83,87,129,131,149,152,166,167,169,170,],[-83,47,65,65,88,65,-84,65,65,47,65,65,65,65,65,65,65,65,65,]),'NOT':([129,131,149,152,169,170,],[152,152,152,152,152,152,]),',':([10,16,21,29,37,43,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,80,81,82,86,87,92,102,111,113,120,144,],[-83,-91,-88,-70,-92,-62,-56,-57,-68,-74,87,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-70,-60,-84,-87,-81,-61,-70,-64,-70,122,130,137,139,-65,-66,]),']':([16,21,37,43,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,68,80,81,82,84,86,87,90,113,116,117,118,119,120,141,144,161,],[-91,-88,-92,-62,-56,-57,-68,-74,-78,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-70,-60,-87,-81,-61,-70,115,-64,-70,120,-76,142,143,-77,144,-65,163,-66,-75,]),'IMPLEMENTATION':([0,1,2,4,5,8,11,12,15,16,18,20,21,23,25,26,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,75,79,80,81,86,94,97,99,102,103,106,120,125,128,132,134,136,138,144,145,148,150,153,154,155,156,157,158,159,162,166,168,171,172,173,174,175,176,177,],[17,-12,-7,-10,-11,-6,17,-14,-9,-91,-5,-3,-88,-13,-4,-8,-92,-70,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-32,-17,-81,-61,-64,-19,-23,-43,-80,-29,-35,-65,-22,-24,-31,-34,-44,-18,-66,-20,-21,-51,-54,-41,-53,-42,-79,-30,-33,-36,-70,-52,-45,-46,-47,-48,-82,-50,-49,]),'.':([6,21,24,59,62,68,80,108,174,175,],[-82,-88,42,-82,42,-87,-81,-82,42,-82,]),'(':([3,6,10,21,39,56,59,67,68,100,108,129,131,149,152,169,170,],[27,29,-83,-88,77,27,29,-84,-87,27,29,149,149,149,149,149,149,]),'END':([1,5,12,16,21,23,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,70,76,79,80,81,86,95,96,98,106,107,109,120,121,124,126,127,133,134,135,138,144,147,159,164,],[-12,-11,-14,-91,-88,-13,-92,-70,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,97,106,-17,-81,-61,-64,125,128,-26,-35,134,-16,-65,97,-27,-25,148,159,-34,-15,-18,-66,-70,-33,-28,]),'OR':([16,21,37,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,80,81,86,120,144,150,153,155,156,158,165,166,168,171,172,173,174,175,176,177,],[-91,-88,-92,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-81,-61,-64,-65,-66,-51,-54,-53,169,169,169,-70,169,-45,-46,-47,-48,-82,169,169,]),':':([10,16,21,31,37,38,43,47,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,67,68,78,80,81,84,86,91,92,104,112,120,144,146,],[-83,-91,-88,70,-92,76,-62,85,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-84,-87,-70,-81,-61,116,-64,121,-86,76,76,-65,-66,-85,]),'ID':([0,1,2,3,4,5,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,29,30,37,41,42,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,87,88,89,93,94,95,96,97,98,99,102,103,105,106,109,114,115,120,121,122,123,124,125,126,127,128,129,130,131,132,134,136,137,138,139,140,142,143,144,145,147,148,149,150,152,153,154,155,156,157,158,159,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,],[21,-12,-7,28,-10,-11,-6,-83,21,-14,34,21,-9,-91,38,-5,21,-3,-88,40,-13,-4,-8,45,21,68,-92,21,80,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,21,-60,-84,-87,21,21,21,21,21,21,-32,21,111,21,-17,-81,-61,21,-64,21,45,68,124,-19,21,21,-23,-26,-43,-80,-29,21,-35,21,21,-37,-65,21,21,68,-27,-22,-25,21,-24,21,21,21,-31,-34,-44,111,-18,45,162,-38,-40,-66,-20,-70,-21,21,-51,21,-54,-41,-53,-42,-79,-30,-33,-36,-39,-28,21,21,-52,21,21,-45,-46,-47,-48,-82,-50,-49,]),'STRING':([29,41,65,78,82,87,129,131,147,149,152,166,169,170,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'REGEX':([29,41,65,78,82,87,129,131,147,149,152,166,169,170,],[58,58,58,58,58,58,154,58,58,58,58,58,58,58,]),'CMP_OP':([16,21,37,43,50,51,52,54,55,57,58,59,61,62,64,66,68,80,81,86,120,129,131,144,149,150,151,152,153,154,155,169,170,],[-91,-88,-92,-62,-57,-68,-74,-69,-67,-55,-71,-82,-63,-59,-58,-60,-87,-81,-61,-64,-65,-70,-70,-66,-70,-56,166,-70,-73,-71,-72,-70,-70,]),'FOR':([0,1,2,4,5,8,11,12,15,16,18,20,21,23,25,26,37,38,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,75,76,79,80,81,86,94,97,99,102,103,105,106,109,120,125,128,132,134,136,138,144,145,148,150,153,154,155,156,157,158,159,162,166,168,171,172,173,174,175,176,177,],[22,-12,-7,-10,-11,-6,22,-14,-9,-91,-5,-3,-88,-13,-4,-8,-92,74,-70,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-32,22,-17,-81,-61,-64,-19,-23,-43,-80,-29,22,-35,22,-65,-22,-24,-31,-34,-44,-18,-66,-20,-21,-51,-54,-41,-53,-42,-79,-30,-33,-36,-70,-52,-45,-46,-47,-48,-82,-50,-49,]),'INT':([29,41,47,65,78,82,85,87,116,129,131,147,149,152,166,169,170,],[55,55,84,55,55,55,117,55,141,55,55,55,55,55,55,55,55,]),'WHEN':([21,68,102,103,157,],[-88,-87,-80,131,-79,]),'USING':([10,36,67,],[-83,73,-84,]),'TRUE':([29,41,65,78,82,87,129,131,147,149,152,166,169,170,],[60,60,60,60,60,60,155,155,60,155,155,60,155,155,]),'EXTENDS':([31,],[69,]),')':([16,21,27,29,37,43,44,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,66,68,80,81,82,86,87,110,111,113,118,120,144,150,153,155,160,161,165,166,168,171,172,173,174,175,176,177,],[-91,-88,43,61,-92,-62,81,86,-56,-57,-68,-74,-78,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-81,-61,-70,-64,-70,136,-90,-76,-77,-65,-66,-51,-54,-53,-89,-75,171,-70,-52,-45,-46,-47,-48,-82,-50,-49,]),'MATCHING':([21,68,101,],[-88,-87,129,]),'ENTITY':([0,1,2,4,5,8,11,12,15,16,18,20,21,23,25,26,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,75,79,80,81,86,94,97,99,102,103,106,120,125,128,132,134,136,138,144,145,148,150,153,154,155,156,157,158,159,162,166,168,171,172,173,174,175,176,177,],[7,-12,-7,-10,-11,-6,7,-14,-9,-91,-5,-3,-88,-13,-4,-8,-92,-70,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-32,-17,-81,-61,-64,-19,-23,-43,-80,-29,-35,-65,-22,-24,-31,-34,-44,-18,-66,-20,-21,-51,-54,-41,-53,-42,-79,-30,-33,-36,-70,-52,-45,-46,-47,-48,-82,-50,-49,]),'FALSE':([29,41,65,78,82,87,129,131,147,149,152,166,169,170,],[63,63,63,63,63,63,153,153,63,153,153,63,153,153,]),'INDEX':([0,1,2,4,5,8,11,12,15,16,18,20,21,23,25,26,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,75,79,80,81,86,94,97,99,102,103,106,120,125,128,132,134,136,138,144,145,148,150,153,154,155,156,157,158,159,162,166,168,171,172,173,174,175,176,177,],[19,-12,-7,-10,-11,-6,19,-14,-9,-91,-5,-3,-88,-13,-4,-8,-92,-70,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-32,-17,-81,-61,-64,-19,-23,-43,-80,-29,-35,-65,-22,-24,-31,-34,-44,-18,-66,-20,-21,-51,-54,-41,-53,-42,-79,-30,-33,-36,-70,-52,-45,-46,-47,-48,-82,-50,-49,]),'AS':([33,34,],[71,72,]),'REL':([46,115,142,143,163,],[83,-37,-38,-40,-39,]),'IN':([16,21,37,40,43,50,51,52,54,55,57,58,59,61,62,64,66,68,80,81,86,120,129,131,144,149,150,151,152,153,154,155,169,170,],[-91,-88,-92,78,-62,-57,-68,-74,-69,-67,-55,-71,-82,-63,-59,-58,-60,-87,-81,-61,-64,-65,-70,-70,-66,-70,-56,167,-70,-73,-71,-72,-70,-70,]),'$end':([1,2,4,5,8,9,11,12,15,16,18,20,21,23,25,26,32,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,75,79,80,81,86,94,97,99,102,103,106,120,125,128,132,134,136,138,144,145,148,150,153,154,155,156,157,158,159,162,166,168,171,172,173,174,175,176,177,],[-12,-7,-10,-11,-6,0,-2,-14,-9,-91,-5,-3,-88,-13,-4,-8,-1,-92,-70,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-32,-17,-81,-61,-64,-19,-23,-43,-80,-29,-35,-65,-22,-24,-31,-34,-44,-18,-66,-20,-21,-51,-54,-41,-53,-42,-79,-30,-33,-36,-70,-52,-45,-46,-47,-48,-82,-50,-49,]),'CID':([0,1,2,4,5,7,8,11,12,13,14,15,16,18,19,20,21,23,25,26,29,30,37,41,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,65,66,68,69,71,74,75,76,78,79,80,81,82,86,87,89,94,97,99,102,103,105,106,109,114,115,120,122,125,128,129,131,132,134,136,138,142,143,144,145,148,149,150,152,153,154,155,156,157,158,159,162,163,166,168,169,170,171,172,173,174,175,176,177,],[10,-12,-7,-10,-11,31,-6,10,-14,33,10,-9,-91,-5,10,-3,-88,-13,-4,-8,10,67,-92,10,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,10,-60,-87,10,10,10,-32,10,10,-17,-81,-61,10,-64,10,67,-19,-23,-43,-80,-29,10,-35,10,10,-37,-65,10,-22,-24,10,10,-31,-34,-44,-18,-38,-40,-66,-20,-21,10,-51,10,-54,-41,-53,-42,-79,-30,-33,-36,-39,10,-52,10,10,-45,-46,-47,-48,-82,-50,-49,]),'SEP':([6,21,35,59,68,93,101,102,108,175,],[30,-88,30,89,-87,123,123,123,30,123,]),'AND':([16,21,37,43,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,80,81,86,120,144,150,153,155,156,158,165,166,168,171,172,173,174,175,176,177,],[-91,-88,-92,-62,-56,-57,-68,-74,-69,-67,-55,-71,-82,-72,-63,-59,-73,-58,-60,-87,-81,-61,-64,-65,-66,-51,-54,-53,170,170,170,-70,170,-45,-46,-47,-48,-82,170,170,]),'=':([6,21,24,45,68,80,108,124,],[-82,-88,41,82,-87,-81,-82,147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constructor':([0,11,29,41,65,71,76,78,82,87,105,109,129,131,149,152,166,169,170,],[1,1,50,50,50,99,1,50,50,50,1,1,50,50,50,50,50,50,50,]),'operand_list':([29,65,87,],[48,90,118,]),'function_call':([0,11,29,41,65,76,78,82,87,105,109,129,131,149,152,166,169,170,],[23,23,49,49,49,23,49,49,49,23,23,150,150,150,150,49,150,150,]),'typedef':([0,11,],[15,15,]),'class_ref_list':([69,122,],[91,146,]),'param_list':([27,88,139,],[44,119,161,]),'operand':([29,41,65,78,82,87,129,131,149,152,166,169,170,],[53,79,53,112,113,53,151,151,151,151,172,151,151,]),'relation':([0,11,],[2,2,]),'for':([0,11,76,105,109,],[12,12,12,12,12,]),'entity_body_outer':([70,121,],[94,145,]),'implement_def':([0,11,],[18,18,]),'index':([0,11,],[4,4,]),'mls':([0,11,16,29,41,65,70,76,78,82,87,121,129,131,147,149,152,166,169,170,],[20,20,37,54,54,54,96,105,54,54,54,96,54,54,54,54,54,54,54,54,]),'class_ref':([0,11,14,19,29,41,65,69,71,74,76,78,82,87,105,109,114,122,129,131,149,152,166,169,170,],[3,3,36,39,56,56,56,92,100,104,100,56,56,56,100,100,140,92,56,56,56,56,56,56,56,]),'assign':([0,11,76,105,109,],[5,5,5,5,5,]),'main':([0,11,],[9,32,]),'constant':([29,41,65,78,82,87,129,131,147,149,152,166,169,170,],[57,57,57,57,57,57,57,57,164,57,57,57,57,57,]),'list_def':([29,41,65,78,82,87,129,131,149,152,166,167,169,170,],[64,64,64,64,64,64,64,64,64,64,64,173,64,64,]),'stmt_list':([76,105,109,],[107,133,135,]),'entity_body':([70,96,121,],[95,127,95,]),'ns_ref':([0,11,14,19,29,41,65,69,70,71,72,73,74,76,78,82,87,95,96,105,109,114,121,122,127,129,130,131,149,152,166,167,169,170,],[6,6,35,35,59,59,59,35,93,35,101,102,35,108,59,59,59,93,93,108,108,35,93,35,93,59,102,59,59,59,59,175,59,59,]),'var_ref':([0,11,29,41,65,76,78,82,87,105,109,129,131,149,152,166,167,169,170,],[24,24,62,62,62,24,62,62,62,24,24,62,62,62,62,62,174,62,62,]),'implementation_def':([0,11,],[8,8,]),'condition':([129,131,149,152,169,170,],[156,158,165,168,176,177,]),'entity_def':([0,11,],[25,25,]),'implementation':([38,104,112,],[75,132,138,]),'statement':([0,11,76,105,109,],[26,26,109,109,109,]),'multi':([28,83,],[46,114,]),'attr':([70,95,96,121,127,],[98,126,98,98,126,]),'top_stmt':([0,11,],[11,11,]),'id_list':([77,137,],[110,160,]),'index_lookup':([29,41,65,78,82,87,129,131,149,152,166,169,170,],[66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ns_list':([73,130,],[103,157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',54),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',61),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',66),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',67),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',68),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',69),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',70),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',71),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',72),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',73),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',82),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',83),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',84),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',85),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',90),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',97),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',102),
  ('for -> FOR ID IN operand implementation','for',5,'p_for','plyInmantaParser.py',108),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',117),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',123),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',129),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',134),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',139),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',144),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',149),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',155),
  ('attr -> ns_ref ID','attr',2,'p_attr','plyInmantaParser.py',160),
  ('attr -> ns_ref ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',166),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',174),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',180),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',188),
  ('implementation_def -> IMPLEMENTATION ID implementation','implementation_def',3,'p_implementation_def_2','plyInmantaParser.py',194),
  ('implementation -> : mls stmt_list END','implementation',4,'p_implementation','plyInmantaParser.py',200),
  ('implementation -> : stmt_list END','implementation',3,'p_implementation_1','plyInmantaParser.py',205),
  ('implementation -> : END','implementation',2,'p_implementation_2','plyInmantaParser.py',210),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',217),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',223),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',228),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',233),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',238),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef',6,'p_typedef_1','plyInmantaParser.py',245),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING condition','typedef',6,'p_typedef_1','plyInmantaParser.py',246),
  ('typedef -> TYPEDEF CID AS constructor','typedef',4,'p_typedef_cls','plyInmantaParser.py',252),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',259),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',268),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',273),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',274),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',275),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',276),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',277),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',284),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',289),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',295),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',296),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',306),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',307),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',308),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',309),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',310),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',311),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',316),
  ('constructor -> class_ref ( )','constructor',3,'p_constructor_empty','plyInmantaParser.py',321),
  ('function_call -> ns_ref ( )','function_call',3,'p_function_call_empty','plyInmantaParser.py',326),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',332),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',338),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',344),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',352),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',353),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',354),
  ('constant -> <empty>','constant',0,'p_constant','plyInmantaParser.py',355),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',361),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',368),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',375),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',385),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',420),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',426),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',431),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',437),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',442),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',448),
  ('var_ref -> var_ref . ID','var_ref',3,'p_var_ref','plyInmantaParser.py',453),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',459),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',465),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',470),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',475),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',481),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',486),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',492),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',498),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',504),
  ('mls -> MLS','mls',1,'p_mls_term','plyInmantaParser.py',509),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',515),
]
