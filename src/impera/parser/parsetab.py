
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AB47056D967D1DE8F68FA19300F50566'
    
_lr_action_items = {'AND':([12,24,36,47,53,54,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,90,112,126,146,148,150,152,153,159,166,167,171,172,173,174,175,176,177,],[-90,-87,-91,-62,-70,-55,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-61,-64,-65,-66,-54,-51,168,-53,168,168,168,-46,-81,-48,-47,-45,168,168,]),'IMPLEMENTATION':([0,2,3,5,8,10,11,12,15,17,18,19,20,21,23,24,36,43,47,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,83,90,99,100,102,105,109,112,113,115,117,123,126,131,133,139,146,148,150,152,153,154,155,158,159,160,163,166,171,172,173,174,175,176,177,],[1,-11,1,-7,-8,-4,-6,-90,-9,-12,-3,-14,-5,-13,-10,-87,-91,-32,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-35,-61,-29,-79,-23,-19,-43,-64,-31,-34,-18,-44,-65,-24,-22,-33,-66,-54,-51,-30,-53,-78,-21,-20,-42,-41,-36,-52,-46,-81,-48,-47,-45,-49,-50,]),'MATCHING':([24,79,110,],[-87,-86,137,]),']':([12,24,36,47,53,54,56,57,59,60,61,62,63,64,66,67,68,69,70,76,78,79,90,91,97,112,118,120,121,125,126,138,142,146,161,],[-90,-87,-91,-62,-70,-55,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-77,-63,-86,-61,119,126,-64,-75,141,143,146,-65,-76,162,-66,-74,]),'FLOAT':([34,41,46,65,89,111,127,137,149,151,156,164,168,169,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'AS':([39,40,],[74,75,]),'FOR':([0,2,3,5,8,10,11,12,15,17,18,19,20,21,23,24,27,36,43,45,47,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,82,83,86,90,99,100,102,105,109,112,113,115,117,123,126,131,133,139,146,148,150,152,153,154,155,158,159,160,163,166,171,172,173,174,175,176,177,],[4,-11,4,-7,-8,-4,-6,-90,-9,-12,-3,-14,-5,-13,-10,-87,44,-91,-32,4,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,4,-35,4,-61,-29,-79,-23,-19,-43,-64,-31,-34,-18,-44,-65,-24,-22,-33,-66,-54,-51,-30,-53,-78,-21,-20,-42,-41,-36,-52,-46,-81,-48,-47,-45,-49,-50,]),'END':([2,12,17,19,21,24,36,45,47,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,72,78,79,82,83,85,90,101,103,104,112,114,115,116,117,126,130,132,134,136,139,146,170,],[-11,-90,-12,-14,-13,-87,-91,83,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,102,-63,-86,-16,-35,115,-61,131,-26,133,-64,-15,-34,139,-18,-65,155,-25,-27,102,-33,-66,-28,]),'REL':([51,119,141,143,162,],[93,-37,-38,-40,-39,]),'FALSE':([34,41,46,65,89,111,127,137,149,151,156,164,168,169,],[57,57,57,57,57,57,148,148,148,148,57,57,148,148,]),'CMP_OP':([12,24,36,47,53,54,56,59,60,61,63,64,66,68,69,70,78,79,90,112,126,146,147,148,150,153,160,],[-90,-87,-91,-62,-70,-55,-57,-58,-60,-59,-73,-71,-72,-69,-81,-80,-63,-86,-61,-64,-65,-66,164,-68,-56,-67,-72,]),'$end':([2,3,5,8,10,11,12,15,16,17,18,19,20,21,23,24,28,36,43,47,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,83,90,99,100,102,105,109,112,113,115,117,123,126,131,133,139,146,148,150,152,153,154,155,158,159,160,163,166,171,172,173,174,175,176,177,],[-11,-2,-7,-8,-4,-6,-90,-9,0,-12,-3,-14,-5,-13,-10,-87,-1,-91,-32,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-35,-61,-29,-79,-23,-19,-43,-64,-31,-34,-18,-44,-65,-24,-22,-33,-66,-54,-51,-30,-53,-78,-21,-20,-42,-41,-36,-52,-46,-81,-48,-47,-45,-49,-50,]),'INT':([34,41,46,50,65,89,92,111,120,127,137,149,151,156,164,168,169,],[68,68,68,91,68,68,121,68,142,68,68,68,68,68,68,68,68,]),'INDEX':([0,2,3,5,8,10,11,12,15,17,18,19,20,21,23,24,36,43,47,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,83,90,99,100,102,105,109,112,113,115,117,123,126,131,133,139,146,148,150,152,153,154,155,158,159,160,163,166,171,172,173,174,175,176,177,],[7,-11,7,-7,-8,-4,-6,-90,-9,-12,-3,-14,-5,-13,-10,-87,-91,-32,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-35,-61,-29,-79,-23,-19,-43,-64,-31,-34,-18,-44,-65,-24,-22,-33,-66,-54,-51,-30,-53,-78,-21,-20,-42,-41,-36,-52,-46,-81,-48,-47,-45,-49,-50,]),'=':([9,24,26,48,70,79,87,134,],[34,-87,-81,89,-80,-86,-81,156,]),'SEP':([24,26,33,69,79,87,100,106,110,172,],[-87,42,42,98,-86,42,129,129,129,129,]),':':([12,14,24,27,36,38,47,50,53,54,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,80,81,88,90,91,107,108,112,126,146,157,],[-90,-82,-87,45,-91,72,-62,92,-70,-55,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-83,45,45,-61,120,-85,136,-64,-65,-66,-84,]),'NOT':([127,137,149,151,168,169,],[149,149,149,149,149,149,]),'ID':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,17,18,19,20,21,23,24,25,30,34,35,36,41,42,43,44,45,46,47,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,82,83,86,89,90,96,98,99,100,101,102,103,104,105,106,109,111,112,113,115,117,119,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,143,144,146,148,149,150,151,152,153,154,155,158,159,160,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,],[24,27,-11,24,29,-7,31,24,-8,-4,-6,-90,24,-82,-9,-12,-3,-14,-5,-13,-10,-87,40,48,24,70,-91,24,79,-32,24,24,24,-62,95,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,24,-72,-67,-69,-81,-80,24,24,24,24,24,-63,-86,-83,24,-35,24,24,-61,48,79,-29,-79,24,-23,-26,24,-19,134,-43,24,-64,-31,-34,-18,-37,24,-44,95,-65,24,24,79,24,-24,-25,-22,-27,24,24,24,-33,48,-38,-40,163,-66,-54,24,-51,24,-30,-53,-78,-21,-20,-42,-41,-39,-36,24,24,-52,24,24,-28,-46,-81,-48,-47,-45,-49,-50,]),',':([12,14,24,36,47,53,54,56,57,59,60,61,62,63,64,66,67,68,69,70,76,78,79,80,90,95,100,107,112,118,126,146,],[-90,-82,-87,-91,-62,-70,-55,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,111,-63,-86,-83,-61,124,128,135,-64,140,-65,-66,]),'STRING':([34,41,46,65,89,111,127,137,149,151,156,164,168,169,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),')':([12,24,30,36,41,47,49,53,54,56,57,59,60,61,62,63,64,66,67,68,69,70,76,77,78,79,90,94,95,112,118,126,138,145,146,148,150,153,161,166,167,171,172,173,174,175,176,177,],[-90,-87,47,-91,78,-62,90,-70,-55,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-77,112,-63,-86,-61,123,-89,-64,-75,-65,-76,-88,-66,-54,-51,-53,-74,-52,175,-46,-81,-48,-47,-45,-49,-50,]),'WHEN':([24,79,99,100,154,],[-87,-86,127,-79,-78,]),'USING':([14,37,80,],[-82,71,-83,]),'[':([14,31,34,41,46,58,65,80,89,93,111,127,137,149,151,164,165,168,169,],[-82,50,65,65,65,96,65,-83,65,50,65,65,65,65,65,65,65,65,65,]),'ENTITY':([0,2,3,5,8,10,11,12,15,17,18,19,20,21,23,24,36,43,47,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,83,90,99,100,102,105,109,112,113,115,117,123,126,131,133,139,146,148,150,152,153,154,155,158,159,160,163,166,171,172,173,174,175,176,177,],[22,-11,22,-7,-8,-4,-6,-90,-9,-12,-3,-14,-5,-13,-10,-87,-91,-32,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-35,-61,-29,-79,-23,-19,-43,-64,-31,-34,-18,-44,-65,-24,-22,-33,-66,-54,-51,-30,-53,-78,-21,-20,-42,-41,-36,-52,-46,-81,-48,-47,-45,-49,-50,]),'MLS':([0,2,3,5,8,10,11,12,15,17,18,19,20,21,23,24,34,36,41,43,45,46,47,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,72,78,79,83,89,90,99,100,102,105,109,111,112,113,115,117,123,126,127,131,133,136,137,139,146,148,149,150,151,152,153,154,155,156,158,159,160,163,164,166,168,169,171,172,173,174,175,176,177,],[12,-11,12,-7,-8,-4,-6,12,-9,-12,-3,-14,-5,-13,-10,-87,12,-91,12,-32,12,12,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,12,-72,-67,-69,-81,-80,12,-63,-86,-35,12,-61,-29,-79,-23,-19,-43,12,-64,-31,-34,-18,-44,-65,12,-24,-22,12,12,-33,-66,-54,12,-51,12,-30,-53,-78,-21,12,-20,-42,-41,-36,12,-52,12,12,-46,-81,-48,-47,-45,-49,-50,]),'IMPLEMENT':([0,2,3,5,8,10,11,12,15,17,18,19,20,21,23,24,36,43,47,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,83,90,99,100,102,105,109,112,113,115,117,123,126,131,133,139,146,148,150,152,153,154,155,158,159,160,163,166,171,172,173,174,175,176,177,],[13,-11,13,-7,-8,-4,-6,-90,-9,-12,-3,-14,-5,-13,-10,-87,-91,-32,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-35,-61,-29,-79,-23,-19,-43,-64,-31,-34,-18,-44,-65,-24,-22,-33,-66,-54,-51,-30,-53,-78,-21,-20,-42,-41,-36,-52,-46,-81,-48,-47,-45,-49,-50,]),'EXTENDS':([38,],[73,]),'(':([6,14,24,26,32,58,69,79,80,84,87,127,137,149,151,168,169,],[30,-82,-87,41,52,30,41,-86,-83,30,41,151,151,151,151,151,151,]),'OR':([12,24,36,47,53,54,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,90,112,126,146,148,150,152,153,159,166,167,171,172,173,174,175,176,177,],[-90,-87,-91,-62,-70,-55,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-61,-64,-65,-66,-54,-51,169,-53,169,169,169,-46,-81,-48,-47,-45,169,169,]),'REGEX':([34,41,46,65,89,111,127,137,149,151,156,164,168,169,],[66,66,66,66,66,66,66,160,66,66,66,66,66,66,]),'CID':([0,2,3,5,7,8,10,11,12,13,15,17,18,19,20,21,22,23,24,25,34,36,41,42,43,44,45,46,47,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,73,74,78,79,82,83,86,89,90,98,99,100,102,105,109,111,112,113,115,117,119,122,123,126,127,131,133,135,137,139,141,143,146,148,149,150,151,152,153,154,155,158,159,160,162,163,164,166,168,169,171,172,173,174,175,176,177,],[14,-11,14,-7,14,-8,-4,-6,-90,14,-9,-12,-3,-14,-5,-13,38,-10,-87,39,14,-91,14,80,-32,14,14,14,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,14,-72,-67,-69,-81,-80,14,14,-63,-86,14,-35,14,14,-61,80,-29,-79,-23,-19,-43,14,-64,-31,-34,-18,-37,14,-44,-65,14,-24,-22,14,14,-33,-38,-40,-66,-54,14,-51,14,-30,-53,-78,-21,-20,-42,-41,-39,-36,14,-52,14,14,-46,-81,-48,-47,-45,-49,-50,]),'TRUE':([34,41,46,65,89,111,127,137,149,151,156,164,168,169,],[67,67,67,67,67,67,153,153,153,153,67,67,153,153,]),'.':([9,24,26,61,69,70,79,87,172,173,],[35,-87,-81,35,-81,-80,-86,-81,-81,35,]),'TYPEDEF':([0,2,3,5,8,10,11,12,15,17,18,19,20,21,23,24,36,43,47,53,54,55,56,57,59,60,61,62,63,64,66,67,68,69,70,78,79,83,90,99,100,102,105,109,112,113,115,117,123,126,131,133,139,146,148,150,152,153,154,155,158,159,160,163,166,171,172,173,174,175,176,177,],[25,-11,25,-7,-8,-4,-6,-90,-9,-12,-3,-14,-5,-13,-10,-87,-91,-32,-62,-70,-55,-17,-57,-68,-58,-60,-59,-56,-73,-71,-72,-67,-69,-81,-80,-63,-86,-35,-61,-29,-79,-23,-19,-43,-64,-31,-34,-18,-44,-65,-24,-22,-33,-66,-54,-51,-30,-53,-78,-21,-20,-42,-41,-36,-52,-46,-81,-48,-47,-45,-49,-50,]),'IN':([12,24,29,36,47,53,54,56,59,60,61,63,64,66,68,69,70,78,79,90,112,126,146,147,148,150,153,160,],[-90,-87,46,-91,-62,-70,-55,-57,-58,-60,-59,-73,-71,-72,-69,-81,-80,-63,-86,-61,-64,-65,-66,165,-68,-56,-67,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'id_list':([52,124,],[94,145,]),'constant':([34,41,46,65,89,111,127,137,149,151,156,164,168,169,],[54,54,54,54,54,54,54,54,54,54,170,54,54,54,]),'for':([0,3,45,82,86,],[19,19,19,19,19,]),'assign':([0,3,45,82,86,],[2,2,2,2,2,]),'top_stmt':([0,3,],[3,3,]),'relation':([0,3,],[5,5,]),'entity_body_outer':([72,136,],[105,158,]),'operand':([34,41,46,65,89,111,127,137,149,151,164,168,169,],[55,76,88,76,118,76,147,147,147,147,171,147,147,]),'constructor':([0,3,34,41,45,46,65,74,82,86,89,111,127,137,149,151,164,168,169,],[17,17,56,56,17,56,56,109,17,17,56,56,56,56,56,56,56,56,56,]),'implementation':([27,81,88,],[43,113,117,]),'class_ref':([0,3,7,13,34,41,44,45,46,65,73,74,82,86,89,111,122,127,135,137,149,151,164,168,169,],[6,6,32,37,58,58,81,84,58,58,107,84,84,84,58,58,144,58,107,58,58,58,58,58,58,]),'statement':([0,3,45,82,86,],[8,8,82,82,82,]),'ns_list':([71,128,],[99,154,]),'operand_list':([41,65,111,],[77,97,138,]),'var_ref':([0,3,34,41,45,46,65,82,86,89,111,127,137,149,151,164,165,168,169,],[9,9,61,61,9,61,61,9,9,61,61,61,61,61,61,61,173,61,61,]),'multi':([31,93,],[51,122,]),'implement_def':([0,3,],[20,20,]),'function_call':([0,3,34,41,45,46,65,82,86,89,111,127,137,149,151,164,168,169,],[21,21,62,62,21,62,62,21,21,62,62,150,150,150,150,62,150,150,]),'param_list':([30,96,140,],[49,125,161,]),'stmt_list':([45,82,86,],[85,114,116,]),'list_def':([34,41,46,65,89,111,127,137,149,151,164,165,168,169,],[59,59,59,59,59,59,59,59,59,59,59,174,59,59,]),'mls':([0,3,12,34,41,45,46,65,72,89,111,127,136,137,149,151,156,164,168,169,],[18,18,36,64,64,86,64,64,101,64,64,64,101,64,64,64,64,64,64,64,]),'main':([0,3,],[16,28,]),'entity_body':([72,101,136,],[104,130,104,]),'implementation_def':([0,3,],[11,11,]),'attr':([72,101,104,130,136,],[103,103,132,132,103,]),'index':([0,3,],[23,23,]),'class_ref_list':([73,135,],[108,157,]),'entity_def':([0,3,],[10,10,]),'condition':([127,137,149,151,168,169,],[152,159,166,167,176,177,]),'index_lookup':([34,41,46,65,89,111,127,137,149,151,164,168,169,],[60,60,60,60,60,60,60,60,60,60,60,60,60,]),'typedef':([0,3,],[15,15,]),'ns_ref':([0,3,7,13,34,41,44,45,46,65,71,72,73,74,75,82,86,89,101,104,111,122,127,128,130,135,136,137,149,151,164,165,168,169,],[26,26,33,33,69,69,33,87,69,69,100,106,33,33,110,87,87,69,106,106,69,33,69,100,106,33,106,69,69,69,69,172,69,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',37),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',44),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',49),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',50),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',51),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',52),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',53),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',54),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',55),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',56),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',65),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',66),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',67),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',68),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',73),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',80),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',85),
  ('for -> FOR ID IN operand implementation','for',5,'p_for','plyInmantaParser.py',91),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',100),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',106),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',112),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',117),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',122),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',127),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',132),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',138),
  ('attr -> ns_ref ID','attr',2,'p_attr','plyInmantaParser.py',143),
  ('attr -> ns_ref ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',149),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',157),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',163),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',171),
  ('implementation_def -> IMPLEMENTATION ID implementation','implementation_def',3,'p_implementation_def_2','plyInmantaParser.py',177),
  ('implementation -> : mls stmt_list END','implementation',4,'p_implementation','plyInmantaParser.py',183),
  ('implementation -> : stmt_list END','implementation',3,'p_implementation_1','plyInmantaParser.py',188),
  ('implementation -> : END','implementation',2,'p_implementation_2','plyInmantaParser.py',193),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',200),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',206),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',211),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',216),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',221),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef',6,'p_typedef_1','plyInmantaParser.py',228),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING condition','typedef',6,'p_typedef_1','plyInmantaParser.py',229),
  ('typedef -> TYPEDEF CID AS constructor','typedef',4,'p_typedef_cls','plyInmantaParser.py',235),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',242),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',251),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',256),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',257),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',258),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',259),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',260),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',267),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',272),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',278),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',279),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',289),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',290),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',291),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',292),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',293),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',294),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',299),
  ('constructor -> class_ref ( )','constructor',3,'p_constructor_empty','plyInmantaParser.py',305),
  ('function_call -> ns_ref ( )','function_call',3,'p_function_call_empty','plyInmantaParser.py',311),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',317),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',323),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',329),
  ('constant -> TRUE','constant',1,'p_constant','plyInmantaParser.py',337),
  ('constant -> FALSE','constant',1,'p_constant','plyInmantaParser.py',338),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',339),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',340),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',341),
  ('constant -> REGEX','constant',1,'p_constant','plyInmantaParser.py',342),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',351),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',386),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',392),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',397),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',403),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',408),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',414),
  ('var_ref -> var_ref . ID','var_ref',3,'p_var_ref','plyInmantaParser.py',419),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',425),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',431),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',436),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',441),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',447),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',452),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',457),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',462),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',468),
  ('mls -> MLS','mls',1,'p_mls_term','plyInmantaParser.py',473),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',478),
]
