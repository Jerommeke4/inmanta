
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'F6FB983AEA87CDD36A8DCDD27DCAA4BF'
    
_lr_action_items = {'(':([2,8,11,22,42,52,65,68,69,96,99,120,136,145,147,166,167,],[28,-88,36,-83,80,28,36,-87,-84,28,36,145,145,145,145,145,145,]),']':([8,19,39,43,50,51,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,71,72,81,82,83,90,92,93,113,115,116,122,123,124,141,152,161,],[-88,-91,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-55,-69,-70,-82,-68,-81,-87,-63,-78,-70,-61,114,123,-64,-70,-76,140,142,152,-65,-77,162,-66,-75,]),'=':([7,8,11,44,67,68,99,133,],[33,-88,-82,81,-81,-87,-82,155,]),'INT':([33,36,46,49,64,81,84,93,115,120,136,145,147,155,166,167,168,],[50,50,83,50,50,50,116,50,141,50,50,50,50,50,50,50,50,]),'USING':([22,31,69,],[-83,48,-84,]),'AND':([8,19,39,43,50,51,53,54,55,56,57,58,59,60,62,63,65,66,67,68,71,82,92,123,146,148,149,151,152,159,164,165,168,171,172,173,174,175,176,177,],[-88,-91,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-55,-69,-82,-68,-81,-87,-63,-61,-64,-65,-53,166,-54,-51,-66,166,166,166,-70,-45,166,166,-46,-48,-82,-47,]),'TRUE':([33,36,49,64,81,93,120,136,145,147,155,166,167,168,],[57,57,57,57,57,57,146,146,146,146,57,146,146,57,]),'MATCHING':([8,68,110,],[-88,-87,136,]),'IMPLEMENTATION':([0,1,6,8,9,10,12,13,14,16,18,19,20,21,23,24,33,39,43,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,71,74,82,86,87,92,100,104,105,109,121,123,125,126,130,131,138,144,146,148,149,151,152,153,154,156,158,159,163,165,168,171,172,173,174,175,176,177,],[15,15,-10,-88,-7,-3,-6,-9,-14,-12,-11,-91,-4,-8,-5,-13,-70,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,-82,-68,-81,-87,-63,-32,-61,-80,-29,-64,-35,-19,-23,-43,-18,-65,-31,-34,-24,-22,-44,-79,-53,-30,-54,-51,-66,-33,-21,-20,-41,-42,-36,-52,-70,-45,-49,-50,-46,-48,-82,-47,]),'WHEN':([8,68,86,87,144,],[-88,-87,-80,120,-79,]),'FOR':([0,1,6,8,9,10,12,13,14,16,18,19,20,21,23,24,33,37,39,43,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,71,74,75,82,86,87,92,97,98,100,104,105,109,121,123,125,126,130,131,138,144,146,148,149,151,152,153,154,156,158,159,163,165,168,171,172,173,174,175,176,177,],[4,4,-10,-88,-7,-3,-6,-9,-14,-12,-11,-91,-4,-8,-5,-13,-70,73,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,-82,-68,-81,-87,-63,-32,4,-61,-80,-29,-64,4,4,-35,-19,-23,-43,-18,-65,-31,-34,-24,-22,-44,-79,-53,-30,-54,-51,-66,-33,-21,-20,-41,-42,-36,-52,-70,-45,-49,-50,-46,-48,-82,-47,]),'STRING':([33,36,49,64,81,93,120,136,145,147,155,166,167,168,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ENTITY':([0,1,6,8,9,10,12,13,14,16,18,19,20,21,23,24,33,39,43,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,71,74,82,86,87,92,100,104,105,109,121,123,125,126,130,131,138,144,146,148,149,151,152,153,154,156,158,159,163,165,168,171,172,173,174,175,176,177,],[17,17,-10,-88,-7,-3,-6,-9,-14,-12,-11,-91,-4,-8,-5,-13,-70,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,-82,-68,-81,-87,-63,-32,-61,-80,-29,-64,-35,-19,-23,-43,-18,-65,-31,-34,-24,-22,-44,-79,-53,-30,-54,-51,-66,-33,-21,-20,-41,-42,-36,-52,-70,-45,-49,-50,-46,-48,-82,-47,]),')':([8,19,28,36,39,43,45,50,51,53,54,55,56,57,58,59,60,62,63,65,66,67,68,70,71,72,81,82,92,93,111,112,113,123,124,146,149,151,152,160,161,164,165,168,171,172,173,174,175,176,177,],[-88,-91,43,71,-92,-62,82,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-55,-69,-82,-68,-81,-87,92,-63,-78,-70,-61,-64,-70,-90,138,-76,-65,-77,-53,-54,-51,-66,-89,-75,171,-52,-70,-45,-49,-50,-46,-48,-82,-47,]),'REL':([47,114,140,142,162,],[85,-37,-38,-40,-39,]),'CMP_OP':([8,19,39,43,50,51,53,54,55,58,59,62,63,65,66,67,68,71,82,92,120,123,136,145,146,147,149,150,151,152,158,166,167,],[-88,-91,-92,-62,-67,-60,-71,-74,-59,-58,-57,-55,-69,-82,-68,-81,-87,-63,-61,-64,-70,-65,-70,-70,-72,-70,-73,168,-56,-66,-71,-70,-70,]),'MLS':([0,1,6,8,9,10,12,13,14,16,18,19,20,21,23,24,33,36,39,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,74,75,76,81,82,86,87,92,93,100,104,105,109,120,121,123,125,126,130,131,134,136,138,144,145,146,147,148,149,151,152,153,154,155,156,158,159,163,165,166,167,168,171,172,173,174,175,176,177,],[19,19,-10,-88,-7,-3,-6,-9,-14,-12,-11,19,-4,-8,-5,-13,19,19,-92,-62,19,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,19,-82,-68,-81,-87,-63,-32,19,19,19,-61,-80,-29,-64,19,-35,-19,-23,-43,19,-18,-65,-31,-34,-24,-22,19,19,-44,-79,19,-53,19,-30,-54,-51,-66,-33,-21,19,-20,-41,-42,-36,-52,19,19,19,-45,-49,-50,-46,-48,-82,-47,]),'OR':([8,19,39,43,50,51,53,54,55,56,57,58,59,60,62,63,65,66,67,68,71,82,92,123,146,148,149,151,152,159,164,165,168,171,172,173,174,175,176,177,],[-88,-91,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-55,-69,-82,-68,-81,-87,-63,-61,-64,-65,-53,167,-54,-51,-66,167,167,167,-70,-45,167,167,-46,-48,-82,-47,]),'$end':([1,5,6,8,9,10,12,13,14,16,18,19,20,21,23,24,27,33,39,43,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,71,74,82,86,87,92,100,104,105,109,121,123,125,126,130,131,138,144,146,148,149,151,152,153,154,156,158,159,163,165,168,171,172,173,174,175,176,177,],[-2,0,-10,-88,-7,-3,-6,-9,-14,-12,-11,-91,-4,-8,-5,-13,-1,-70,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,-82,-68,-81,-87,-63,-32,-61,-80,-29,-64,-35,-19,-23,-43,-18,-65,-31,-34,-24,-22,-44,-79,-53,-30,-54,-51,-66,-33,-21,-20,-41,-42,-36,-52,-70,-45,-49,-50,-46,-48,-82,-47,]),'SEP':([8,11,30,65,68,86,99,103,110,176,],[-88,35,35,91,-87,118,35,118,118,118,]),'REGEX':([33,36,49,64,81,93,120,136,145,147,155,166,167,168,],[53,53,53,53,53,53,53,158,53,53,53,53,53,53,]),',':([8,19,22,36,39,43,50,51,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,71,72,81,82,86,92,93,108,111,113,123,152,],[-88,-91,-83,-70,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-55,-69,-70,-82,-68,-81,-87,-84,-63,93,-70,-61,119,-64,-70,135,137,139,-65,-66,]),'EXTENDS':([38,],[77,]),'CID':([0,1,3,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,26,33,35,36,39,43,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,75,77,78,81,82,86,87,91,92,93,97,98,100,104,105,109,114,117,120,121,123,125,126,130,131,135,136,138,140,142,144,145,146,147,148,149,151,152,153,154,156,158,159,162,163,165,166,167,168,171,172,173,174,175,176,177,],[22,22,22,-10,-88,-7,-3,-6,-9,-14,-12,38,-11,-91,-4,-8,-5,-13,40,22,22,69,22,-92,-62,22,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,22,-82,-68,-81,-87,-63,22,-32,22,22,22,22,-61,-80,-29,69,-64,22,22,22,-35,-19,-23,-43,-37,22,22,-18,-65,-31,-34,-24,-22,22,22,-44,-38,-40,-79,22,-53,22,-30,-54,-51,-66,-33,-21,-20,-41,-42,-39,-36,-52,22,22,22,-45,-49,-50,-46,-48,-82,-47,]),'ID':([0,1,2,3,4,6,8,9,10,12,13,14,15,16,18,19,20,21,22,23,24,25,26,28,33,34,35,36,39,43,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,73,74,75,76,77,78,79,80,81,82,86,87,89,91,92,93,97,98,100,101,102,103,104,105,106,109,114,117,118,119,120,121,123,125,126,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,151,152,153,154,155,156,158,159,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,],[8,8,29,8,32,-10,-88,-7,-3,-6,-9,-14,37,-12,-11,-91,-4,-8,-83,-5,-13,41,8,44,8,67,68,8,-92,-62,8,8,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,8,-82,-68,-81,-87,-84,-63,8,-32,8,8,8,8,8,111,8,-61,-80,-29,44,68,-64,8,8,8,-35,8,8,133,-19,-23,-26,-43,-37,8,68,8,8,-18,-65,-31,-34,8,-24,-22,-25,-27,8,8,8,111,-44,44,-38,-40,163,-79,8,-53,8,-30,-54,-51,-66,-33,-21,-70,-20,-41,-42,-39,-36,-52,8,8,8,8,-28,-45,-49,-50,-46,-48,-82,-47,]),'AS':([40,41,],[78,79,]),':':([8,19,22,37,38,39,43,46,49,50,51,53,54,55,56,57,58,59,60,62,63,65,66,67,68,69,71,82,83,88,92,94,107,108,123,152,157,],[-88,-91,-83,75,76,-92,-62,84,-70,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-55,-69,-82,-68,-81,-87,-84,-63,-61,115,75,-64,75,134,-86,-65,-66,-85,]),'[':([22,29,33,36,49,52,64,69,81,85,93,120,136,145,147,166,167,168,169,],[-83,46,64,64,64,89,64,-84,64,46,64,64,64,64,64,64,64,64,64,]),'IMPLEMENT':([0,1,6,8,9,10,12,13,14,16,18,19,20,21,23,24,33,39,43,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,71,74,82,86,87,92,100,104,105,109,121,123,125,126,130,131,138,144,146,148,149,151,152,153,154,156,158,159,163,165,168,171,172,173,174,175,176,177,],[3,3,-10,-88,-7,-3,-6,-9,-14,-12,-11,-91,-4,-8,-5,-13,-70,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,-82,-68,-81,-87,-63,-32,-61,-80,-29,-64,-35,-19,-23,-43,-18,-65,-31,-34,-24,-22,-44,-79,-53,-30,-54,-51,-66,-33,-21,-20,-41,-42,-36,-52,-70,-45,-49,-50,-46,-48,-82,-47,]),'NOT':([120,136,145,147,166,167,],[147,147,147,147,147,147,]),'.':([7,8,11,55,65,67,68,99,175,176,],[34,-88,-82,34,-82,-81,-87,-82,34,-82,]),'FLOAT':([33,36,49,64,81,93,120,136,145,147,155,166,167,168,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'INDEX':([0,1,6,8,9,10,12,13,14,16,18,19,20,21,23,24,33,39,43,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,71,74,82,86,87,92,100,104,105,109,121,123,125,126,130,131,138,144,146,148,149,151,152,153,154,156,158,159,163,165,168,171,172,173,174,175,176,177,],[26,26,-10,-88,-7,-3,-6,-9,-14,-12,-11,-91,-4,-8,-5,-13,-70,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,-82,-68,-81,-87,-63,-32,-61,-80,-29,-64,-35,-19,-23,-43,-18,-65,-31,-34,-24,-22,-44,-79,-53,-30,-54,-51,-66,-33,-21,-20,-41,-42,-36,-52,-70,-45,-49,-50,-46,-48,-82,-47,]),'IN':([8,19,32,39,43,50,51,53,54,55,58,59,62,63,65,66,67,68,71,82,92,120,123,136,145,146,147,149,150,151,152,158,166,167,],[-88,-91,49,-92,-62,-67,-60,-71,-74,-59,-58,-57,-55,-69,-82,-68,-81,-87,-63,-61,-64,-70,-65,-70,-70,-72,-70,-73,169,-56,-66,-71,-70,-70,]),'FALSE':([33,36,49,64,81,93,120,136,145,147,155,166,167,168,],[60,60,60,60,60,60,149,149,149,149,60,149,149,60,]),'TYPEDEF':([0,1,6,8,9,10,12,13,14,16,18,19,20,21,23,24,33,39,43,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,71,74,82,86,87,92,100,104,105,109,121,123,125,126,130,131,138,144,146,148,149,151,152,153,154,156,158,159,163,165,168,171,172,173,174,175,176,177,],[25,25,-10,-88,-7,-3,-6,-9,-14,-12,-11,-91,-4,-8,-5,-13,-70,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,-82,-68,-81,-87,-63,-32,-61,-80,-29,-64,-35,-19,-23,-43,-18,-65,-31,-34,-24,-22,-44,-79,-53,-30,-54,-51,-66,-33,-21,-20,-41,-42,-36,-52,-70,-45,-49,-50,-46,-48,-82,-47,]),'END':([8,14,16,18,19,24,33,39,43,50,51,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,71,75,76,82,92,95,98,100,101,102,106,121,123,126,127,128,129,132,133,134,152,153,155,170,],[-88,-14,-12,-11,-91,-13,-70,-92,-62,-67,-60,-71,-74,-59,-56,-72,-58,-57,-73,-17,-55,-69,-82,-68,-81,-87,-63,100,105,-61,-64,126,-16,-35,130,131,-26,-18,-65,-34,153,-15,154,-25,-27,105,-66,-33,-70,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt_list':([75,97,98,],[95,127,128,]),'mls':([0,1,19,33,36,49,64,75,76,81,93,120,134,136,145,147,155,166,167,168,],[10,10,39,63,63,63,63,97,101,63,63,63,101,63,63,63,63,63,63,63,]),'typedef':([0,1,],[13,13,]),'top_stmt':([0,1,],[1,1,]),'param_list':([28,89,139,],[45,122,161,]),'class_ref':([0,1,3,26,33,36,49,64,73,75,77,78,81,93,97,98,117,120,135,136,145,147,166,167,168,],[2,2,31,42,52,52,52,52,94,96,108,96,52,52,96,96,143,52,108,52,52,52,52,52,52,]),'for':([0,1,75,97,98,],[14,14,14,14,14,]),'list_def':([33,36,49,64,81,93,120,136,145,147,166,167,168,169,],[58,58,58,58,58,58,58,58,58,58,58,58,58,177,]),'ns_list':([48,119,],[87,144,]),'var_ref':([0,1,33,36,49,64,75,81,93,97,98,120,136,145,147,166,167,168,169,],[7,7,55,55,55,55,7,55,55,7,7,55,55,55,55,55,55,55,175,]),'operand_list':([36,64,93,],[70,90,124,]),'class_ref_list':([77,135,],[107,157,]),'index':([0,1,],[6,6,]),'condition':([120,136,145,147,166,167,],[148,159,164,165,172,173,]),'main':([0,1,],[5,27,]),'assign':([0,1,75,97,98,],[18,18,18,18,18,]),'entity_def':([0,1,],[20,20,]),'id_list':([80,137,],[112,160,]),'attr':([76,101,102,129,134,],[106,106,132,132,106,]),'statement':([0,1,75,97,98,],[21,21,98,98,98,]),'constructor':([0,1,33,36,49,64,75,78,81,93,97,98,120,136,145,147,166,167,168,],[16,16,59,59,59,59,16,109,59,59,16,16,59,59,59,59,59,59,59,]),'operand':([33,36,49,64,81,93,120,136,145,147,166,167,168,],[61,72,88,72,113,72,150,150,150,150,150,150,174,]),'implement_def':([0,1,],[23,23,]),'relation':([0,1,],[9,9,]),'function_call':([0,1,33,36,49,64,75,81,93,97,98,120,136,145,147,166,167,168,],[24,24,56,56,56,56,24,56,56,24,24,151,151,151,151,151,151,56,]),'entity_body':([76,101,134,],[102,129,102,]),'ns_ref':([0,1,3,26,33,36,48,49,64,73,75,76,77,78,79,81,93,97,98,101,102,117,119,120,129,134,135,136,145,147,166,167,168,169,],[11,11,30,30,65,65,86,65,65,30,99,103,30,30,110,65,65,99,99,103,103,30,86,65,103,103,30,65,65,65,65,65,65,176,]),'implementation_def':([0,1,],[12,12,]),'implementation':([37,88,94,],[74,121,125,]),'constant':([33,36,49,64,81,93,120,136,145,147,155,166,167,168,],[62,62,62,62,62,62,62,62,62,62,170,62,62,62,]),'index_lookup':([33,36,49,64,81,93,120,136,145,147,166,167,168,],[51,51,51,51,51,51,51,51,51,51,51,51,51,]),'entity_body_outer':([76,134,],[104,156,]),'multi':([29,85,],[47,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',54),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',61),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',66),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',67),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',68),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',69),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',70),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',71),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',72),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',73),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',82),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',83),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',84),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',85),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',90),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',97),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',102),
  ('for -> FOR ID IN operand implementation','for',5,'p_for','plyInmantaParser.py',108),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',117),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',123),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',129),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',134),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',139),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',144),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',149),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',155),
  ('attr -> ns_ref ID','attr',2,'p_attr','plyInmantaParser.py',160),
  ('attr -> ns_ref ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',166),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',174),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',180),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',188),
  ('implementation_def -> IMPLEMENTATION ID implementation','implementation_def',3,'p_implementation_def_2','plyInmantaParser.py',194),
  ('implementation -> : mls stmt_list END','implementation',4,'p_implementation','plyInmantaParser.py',200),
  ('implementation -> : stmt_list END','implementation',3,'p_implementation_1','plyInmantaParser.py',205),
  ('implementation -> : END','implementation',2,'p_implementation_2','plyInmantaParser.py',210),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',217),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',223),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',228),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',233),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',238),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef',6,'p_typedef_1','plyInmantaParser.py',245),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING condition','typedef',6,'p_typedef_1','plyInmantaParser.py',246),
  ('typedef -> TYPEDEF CID AS constructor','typedef',4,'p_typedef_cls','plyInmantaParser.py',252),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',259),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',268),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',273),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',274),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',275),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',276),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',277),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',284),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',289),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',295),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',296),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',306),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',307),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',308),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',309),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',310),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',311),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',316),
  ('constructor -> class_ref ( )','constructor',3,'p_constructor_empty','plyInmantaParser.py',321),
  ('function_call -> ns_ref ( )','function_call',3,'p_function_call_empty','plyInmantaParser.py',326),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',332),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',338),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',344),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',352),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',353),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',354),
  ('constant -> <empty>','constant',0,'p_constant','plyInmantaParser.py',355),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',361),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',368),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',375),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',385),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',420),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',426),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',431),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',437),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',442),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',448),
  ('var_ref -> var_ref . ID','var_ref',3,'p_var_ref','plyInmantaParser.py',453),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',459),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',465),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',470),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',475),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',481),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',486),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',492),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',498),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',504),
  ('mls -> MLS','mls',1,'p_mls_term','plyInmantaParser.py',509),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',515),
]
