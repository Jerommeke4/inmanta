
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F6FB983AEA87CDD36A8DCDD27DCAA4BF'
    
_lr_action_items = {'FALSE':([28,38,43,62,82,96,131,136,141,154,155,165,169,170,],[44,44,44,44,44,44,150,150,44,150,150,44,150,150,]),'AS':([40,41,],[78,79,]),'IMPLEMENT':([0,1,2,6,7,8,9,12,14,15,16,18,19,20,24,25,36,38,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,73,76,77,83,87,90,95,100,101,106,109,113,116,117,119,132,135,138,139,140,142,149,150,152,153,156,157,158,159,163,165,167,171,172,173,174,175,176,177,],[13,-13,-3,-8,-14,13,-6,-4,-91,-10,-5,-9,-12,-7,-11,-88,-92,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-32,-17,-81,-64,-19,-23,-61,-80,-29,-35,-43,-18,-65,-22,-24,-31,-34,-44,-66,-21,-20,-79,-54,-53,-51,-30,-33,-41,-42,-36,-70,-52,-46,-48,-47,-82,-45,-50,-49,]),'$end':([1,2,6,7,8,9,12,14,15,16,18,19,20,22,24,25,30,36,38,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,73,76,77,83,87,90,95,100,101,106,109,113,116,117,119,132,135,138,139,140,142,149,150,152,153,156,157,158,159,163,165,167,171,172,173,174,175,176,177,],[-13,-3,-8,-14,-2,-6,-4,-91,-10,-5,-9,-12,-7,0,-11,-88,-1,-92,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-32,-17,-81,-64,-19,-23,-61,-80,-29,-35,-43,-18,-65,-22,-24,-31,-34,-44,-66,-21,-20,-79,-54,-53,-51,-30,-33,-41,-42,-36,-70,-52,-46,-48,-47,-82,-45,-50,-49,]),'INT':([28,38,43,62,71,82,96,98,128,131,136,141,154,155,165,169,170,],[46,46,46,46,99,46,46,127,148,46,46,46,46,46,46,46,46,]),':':([4,14,25,31,36,37,43,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,63,64,67,71,77,81,83,93,94,95,99,102,116,139,143,],[-83,-91,-88,65,-92,75,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-84,-87,-62,98,-81,75,-64,123,-86,-61,128,75,-65,-66,-85,]),'END':([1,7,14,19,24,25,36,38,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,65,67,75,76,77,83,88,89,91,95,105,106,107,113,116,118,120,122,123,133,134,135,139,141,157,161,],[-13,-14,-91,-12,-11,-88,-92,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,90,-62,106,-17,-81,-64,117,-26,119,-61,-16,-35,135,-18,-65,-25,140,-27,90,157,-15,-34,-66,-70,-33,-28,]),'EXTENDS':([31,],[66,]),'=':([5,21,25,64,69,77,104,122,],[-82,38,-88,-87,96,-81,-82,141,]),'NOT':([131,136,154,155,169,170,],[154,154,154,154,154,154,]),'MLS':([0,1,2,6,7,8,9,12,14,15,16,18,19,20,24,25,28,36,38,43,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,62,64,65,67,73,75,76,77,82,83,87,90,95,96,100,101,106,109,113,116,117,119,123,131,132,135,136,138,139,140,141,142,149,150,152,153,154,155,156,157,158,159,163,165,167,169,170,171,172,173,174,175,176,177,],[14,-13,-3,-8,-14,14,-6,-4,14,-10,-5,-9,-12,-7,-11,-88,14,-92,14,14,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,14,-87,14,-62,-32,14,-17,-81,14,-64,-19,-23,-61,14,-80,-29,-35,-43,-18,-65,-22,-24,14,14,-31,-34,14,-44,-66,-21,14,-20,-79,-54,-53,-51,14,14,-30,-33,-41,-42,-36,14,-52,14,14,-46,-48,-47,-82,-45,-50,-49,]),'FLOAT':([28,38,43,62,82,96,131,136,141,154,155,165,169,170,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'WHEN':([25,64,100,101,149,],[-88,-87,-80,131,-79,]),'FOR':([0,1,2,6,7,8,9,12,14,15,16,18,19,20,24,25,36,37,38,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,73,75,76,77,83,87,90,95,100,101,103,105,106,109,113,116,117,119,132,135,138,139,140,142,149,150,152,153,156,157,158,159,163,165,167,171,172,173,174,175,176,177,],[3,-13,-3,-8,-14,3,-6,-4,-91,-10,-5,-9,-12,-7,-11,-88,-92,74,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-32,3,-17,-81,-64,-19,-23,-61,-80,-29,3,3,-35,-43,-18,-65,-22,-24,-31,-34,-44,-66,-21,-20,-79,-54,-53,-51,-30,-33,-41,-42,-36,-70,-52,-46,-48,-47,-82,-45,-50,-49,]),'USING':([4,35,63,],[-83,72,-84,]),'IMPLEMENTATION':([0,1,2,6,7,8,9,12,14,15,16,18,19,20,24,25,36,38,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,73,76,77,83,87,90,95,100,101,106,109,113,116,117,119,132,135,138,139,140,142,149,150,152,153,156,157,158,159,163,165,167,171,172,173,174,175,176,177,],[17,-13,-3,-8,-14,17,-6,-4,-91,-10,-5,-9,-12,-7,-11,-88,-92,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-32,-17,-81,-64,-19,-23,-61,-80,-29,-35,-43,-18,-65,-22,-24,-31,-34,-44,-66,-21,-20,-79,-54,-53,-51,-30,-33,-41,-42,-36,-70,-52,-46,-48,-47,-82,-45,-50,-49,]),'REGEX':([28,38,43,62,82,96,131,136,141,154,155,165,169,170,],[55,55,55,55,55,55,55,158,55,55,55,55,55,55,]),'CID':([0,1,2,6,7,8,9,10,12,13,14,15,16,18,19,20,23,24,25,26,28,29,36,38,43,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,62,64,66,67,73,74,75,76,77,78,82,83,84,87,90,95,96,100,101,103,105,106,109,113,116,117,119,124,126,129,131,132,135,136,138,139,140,142,146,147,149,150,152,153,154,155,156,157,158,159,163,164,165,167,169,170,171,172,173,174,175,176,177,],[4,-13,-3,-8,-14,4,-6,31,-4,4,-91,-10,-5,-9,-12,-7,40,-11,-88,4,4,63,-92,4,4,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,4,-87,4,-62,-32,4,4,-17,-81,4,4,-64,63,-19,-23,-61,4,-80,-29,4,4,-35,-43,-18,-65,-22,-24,4,4,-37,4,-31,-34,4,-44,-66,-21,-20,-40,-38,-79,-54,-53,-51,4,4,-30,-33,-41,-42,-36,-39,4,-52,4,4,-46,-48,-47,-82,-45,-50,-49,]),'AND':([14,25,36,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,77,83,95,116,139,150,152,153,156,159,165,167,168,171,172,173,174,175,176,177,],[-91,-88,-92,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-81,-64,-61,-65,-66,-54,-53,-51,170,170,-70,170,170,-46,-48,-47,-82,-45,170,170,]),')':([14,25,28,32,36,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,67,68,77,82,83,95,96,111,112,114,116,125,139,150,152,153,160,162,165,167,168,171,172,173,174,175,176,177,],[-91,-88,57,67,-92,-73,-78,-67,-72,-60,-57,-56,-68,83,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,95,-81,-70,-64,-61,-70,-90,138,-77,-65,-76,-66,-54,-53,-51,-89,-75,-70,-52,175,-46,-48,-47,-82,-45,-50,-49,]),'IN':([14,25,27,36,46,48,49,51,53,54,55,56,57,58,59,60,64,67,77,83,95,116,131,136,139,150,151,152,153,154,155,158,169,170,],[-91,-88,43,-92,-67,-60,-57,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-81,-64,-61,-65,-70,-70,-66,-73,166,-72,-56,-70,-70,-71,-70,-70,]),'CMP_OP':([14,25,36,46,48,49,51,53,54,55,56,57,58,59,60,64,67,77,83,95,116,131,136,139,150,151,152,153,154,155,158,169,170,],[-91,-88,-92,-67,-60,-57,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-81,-64,-61,-65,-70,-70,-66,-73,165,-72,-56,-70,-70,-71,-70,-70,]),'REL':([70,129,146,147,164,],[97,-37,-40,-38,-39,]),'.':([5,21,25,56,58,64,77,104,172,174,],[-82,39,-88,-82,39,-87,-81,-82,39,-82,]),'OR':([14,25,36,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,77,83,95,116,139,150,152,153,156,159,165,167,168,171,172,173,174,175,176,177,],[-91,-88,-92,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-81,-64,-61,-65,-66,-54,-53,-51,169,169,-70,169,169,-46,-48,-47,-82,-45,169,169,]),',':([4,14,25,28,36,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,62,63,64,67,77,82,83,94,95,96,100,111,116,125,139,],[-83,-91,-88,-70,-92,-73,82,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-70,-84,-87,-62,-81,-70,-64,124,-61,-70,130,137,-65,144,-66,]),'MATCHING':([25,64,110,],[-88,-87,136,]),'TYPEDEF':([0,1,2,6,7,8,9,12,14,15,16,18,19,20,24,25,36,38,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,73,76,77,83,87,90,95,100,101,106,109,113,116,117,119,132,135,138,139,140,142,149,150,152,153,156,157,158,159,163,165,167,171,172,173,174,175,176,177,],[23,-13,-3,-8,-14,23,-6,-4,-91,-10,-5,-9,-12,-7,-11,-88,-92,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-32,-17,-81,-64,-19,-23,-61,-80,-29,-35,-43,-18,-65,-22,-24,-31,-34,-44,-66,-21,-20,-79,-54,-53,-51,-30,-33,-41,-42,-36,-70,-52,-46,-48,-47,-82,-45,-50,-49,]),'(':([4,5,11,25,42,56,61,63,64,104,108,131,136,154,155,169,170,],[-83,28,32,-88,80,28,32,-84,-87,28,32,155,155,155,155,155,155,]),'ID':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,23,24,25,26,28,29,32,36,38,39,43,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,62,63,64,65,66,67,72,73,74,75,76,77,78,79,80,82,83,84,85,87,88,89,90,91,92,95,96,100,101,103,105,106,109,113,116,117,118,119,120,121,122,123,124,126,129,130,131,132,135,136,137,138,139,140,141,142,144,145,146,147,149,150,152,153,154,155,156,157,158,159,161,163,164,165,166,167,169,170,171,172,173,174,175,176,177,],[25,-13,-3,27,-83,-8,-14,25,-6,33,-4,25,-91,-10,-5,37,-9,-12,-7,41,-11,-88,25,25,64,69,-92,25,77,25,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,25,-84,-87,25,25,-62,25,-32,25,25,-17,-81,25,25,111,25,-64,64,69,-19,25,-26,-23,25,122,-61,25,-80,-29,25,25,-35,-43,-18,-65,-22,-25,-24,25,64,-27,25,25,25,-37,25,25,-31,-34,25,111,-44,-66,-21,-70,-20,69,163,-40,-38,-79,-54,-53,-51,25,25,-30,-33,-41,-42,-28,-36,-39,25,25,-52,25,25,-46,-48,-47,-82,-45,-50,-49,]),'INDEX':([0,1,2,6,7,8,9,12,14,15,16,18,19,20,24,25,36,38,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,73,76,77,83,87,90,95,100,101,106,109,113,116,117,119,132,135,138,139,140,142,149,150,152,153,156,157,158,159,163,165,167,171,172,173,174,175,176,177,],[26,-13,-3,-8,-14,26,-6,-4,-91,-10,-5,-9,-12,-7,-11,-88,-92,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-32,-17,-81,-64,-19,-23,-61,-80,-29,-35,-43,-18,-65,-22,-24,-31,-34,-44,-66,-21,-20,-79,-54,-53,-51,-30,-33,-41,-42,-36,-70,-52,-46,-48,-47,-82,-45,-50,-49,]),'TRUE':([28,38,43,62,82,96,131,136,141,154,155,165,169,170,],[47,47,47,47,47,47,152,152,47,152,152,47,152,152,]),'STRING':([28,38,43,62,82,96,131,136,141,154,155,165,169,170,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ENTITY':([0,1,2,6,7,8,9,12,14,15,16,18,19,20,24,25,36,38,44,46,47,48,49,50,51,53,54,55,56,57,58,59,60,64,67,73,76,77,83,87,90,95,100,101,106,109,113,116,117,119,132,135,138,139,140,142,149,150,152,153,156,157,158,159,163,165,167,171,172,173,174,175,176,177,],[10,-13,-3,-8,-14,10,-6,-4,-91,-10,-5,-9,-12,-7,-11,-88,-92,-70,-73,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-87,-62,-32,-17,-81,-64,-19,-23,-61,-80,-29,-35,-43,-18,-65,-22,-24,-31,-34,-44,-66,-21,-20,-79,-54,-53,-51,-30,-33,-41,-42,-36,-70,-52,-46,-48,-47,-82,-45,-50,-49,]),']':([14,25,36,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,62,64,67,77,82,83,86,95,96,99,114,115,116,125,127,128,139,148,162,],[-91,-88,-92,-73,-78,-67,-72,-60,-57,-56,-68,-69,-74,-71,-82,-63,-59,-55,-58,-70,-87,-62,-81,-70,-64,116,-61,-70,129,-77,139,-65,-76,146,147,-66,164,-75,]),'[':([4,28,33,38,43,61,62,63,82,96,97,131,136,154,155,165,166,169,170,],[-83,62,71,62,62,85,62,-84,62,62,71,62,62,62,62,62,62,62,62,]),'SEP':([5,25,34,56,64,92,100,104,110,174,],[29,-88,29,84,-87,121,121,29,121,121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'implementation':([37,81,102,],[73,113,132,]),'entity_def':([0,8,],[12,12,]),'ns_list':([72,130,],[101,149,]),'index_lookup':([28,38,43,62,82,96,131,136,154,155,165,169,170,],[48,48,48,48,48,48,48,48,48,48,48,48,48,]),'class_ref_list':([66,124,],[93,143,]),'entity_body':([65,91,123,],[88,120,88,]),'constructor':([0,8,28,38,43,62,75,78,82,96,103,105,131,136,154,155,165,169,170,],[19,19,49,49,49,49,19,109,49,49,19,19,49,49,49,49,49,49,49,]),'function_call':([0,8,28,38,43,62,75,82,96,103,105,131,136,154,155,165,169,170,],[1,1,50,50,50,50,1,50,50,1,1,153,153,153,153,50,153,153,]),'multi':([33,97,],[70,126,]),'operand_list':([28,62,82,],[52,86,114,]),'implement_def':([0,8,],[16,16,]),'mls':([0,8,14,28,38,43,62,65,75,82,96,123,131,136,141,154,155,165,169,170,],[2,2,36,53,53,53,53,91,103,53,53,91,53,53,53,53,53,53,53,53,]),'operand':([28,38,43,62,82,96,131,136,154,155,165,169,170,],[45,76,81,45,45,125,151,151,151,151,171,151,151,]),'typedef':([0,8,],[18,18,]),'param_list':([32,85,144,],[68,115,162,]),'ns_ref':([0,8,13,26,28,38,43,62,65,66,72,74,75,78,79,82,88,91,96,103,105,120,123,124,126,130,131,136,154,155,165,166,169,170,],[5,5,34,34,56,56,56,56,92,34,100,34,104,34,110,56,92,92,56,104,104,92,92,34,34,100,56,56,56,56,56,174,56,56,]),'relation':([0,8,],[20,20,]),'index':([0,8,],[15,15,]),'var_ref':([0,8,28,38,43,62,75,82,96,103,105,131,136,154,155,165,166,169,170,],[21,21,58,58,58,58,21,58,58,21,21,58,58,58,58,58,172,58,58,]),'constant':([28,38,43,62,82,96,131,136,141,154,155,165,169,170,],[59,59,59,59,59,59,59,59,161,59,59,59,59,59,]),'statement':([0,8,75,103,105,],[6,6,105,105,105,]),'main':([0,8,],[22,30,]),'attr':([65,88,91,120,123,],[89,118,89,118,89,]),'list_def':([28,38,43,62,82,96,131,136,154,155,165,166,169,170,],[60,60,60,60,60,60,60,60,60,60,60,173,60,60,]),'for':([0,8,75,103,105,],[7,7,7,7,7,]),'top_stmt':([0,8,],[8,8,]),'assign':([0,8,75,103,105,],[24,24,24,24,24,]),'implementation_def':([0,8,],[9,9,]),'stmt_list':([75,103,105,],[107,133,134,]),'entity_body_outer':([65,123,],[87,142,]),'class_ref':([0,8,13,26,28,38,43,62,66,74,75,78,82,96,103,105,124,126,131,136,154,155,165,169,170,],[11,11,35,42,61,61,61,61,94,102,108,108,61,61,108,108,94,145,61,61,61,61,61,61,61,]),'condition':([131,136,154,155,169,170,],[156,159,167,168,176,177,]),'id_list':([80,137,],[112,160,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',37),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',44),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',49),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',50),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',51),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',52),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',53),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',54),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',55),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',56),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',65),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',66),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',67),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',68),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',73),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',80),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',85),
  ('for -> FOR ID IN operand implementation','for',5,'p_for','plyInmantaParser.py',91),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',100),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',106),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',112),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',117),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',122),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',127),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',132),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',138),
  ('attr -> ns_ref ID','attr',2,'p_attr','plyInmantaParser.py',143),
  ('attr -> ns_ref ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',149),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',157),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',163),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',171),
  ('implementation_def -> IMPLEMENTATION ID implementation','implementation_def',3,'p_implementation_def_2','plyInmantaParser.py',177),
  ('implementation -> : mls stmt_list END','implementation',4,'p_implementation','plyInmantaParser.py',183),
  ('implementation -> : stmt_list END','implementation',3,'p_implementation_1','plyInmantaParser.py',188),
  ('implementation -> : END','implementation',2,'p_implementation_2','plyInmantaParser.py',193),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',200),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',206),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',211),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',216),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',221),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef',6,'p_typedef_1','plyInmantaParser.py',228),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING condition','typedef',6,'p_typedef_1','plyInmantaParser.py',229),
  ('typedef -> TYPEDEF CID AS constructor','typedef',4,'p_typedef_cls','plyInmantaParser.py',235),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',242),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',251),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',256),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',257),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',258),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',259),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',260),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',267),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',272),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',278),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',279),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',289),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',290),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',291),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',292),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',293),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',294),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',299),
  ('constructor -> class_ref ( )','constructor',3,'p_constructor_empty','plyInmantaParser.py',305),
  ('function_call -> ns_ref ( )','function_call',3,'p_function_call_empty','plyInmantaParser.py',311),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',317),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',323),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',329),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',337),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',338),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',339),
  ('constant -> <empty>','constant',0,'p_constant','plyInmantaParser.py',340),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',346),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',353),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',360),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',370),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',405),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',411),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',416),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',422),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',427),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',433),
  ('var_ref -> var_ref . ID','var_ref',3,'p_var_ref','plyInmantaParser.py',438),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',444),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',450),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',455),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',460),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',466),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',471),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',476),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',481),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',487),
  ('mls -> MLS','mls',1,'p_mls_term','plyInmantaParser.py',492),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',497),
]
