
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DECA155D742A9FEC687DFB97696949F3'
    
_lr_action_items = {'=':([5,11,21,46,66,75,103,114,],[-85,32,-79,-78,95,-84,-79,145,]),'REL':([67,127,153,155,168,],[96,-37,-38,-40,-39,]),'TYPEDEF':([0,1,2,3,4,5,7,9,10,16,17,18,20,22,24,25,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,70,75,79,80,85,86,94,105,107,109,115,118,122,123,130,133,134,137,138,139,140,143,146,148,149,156,157,158,161,167,169,170,171,172,173,174,175,],[23,-6,-11,-4,-88,-85,-12,-5,-3,-8,-13,23,-9,-14,-10,-7,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,-32,-84,-77,-29,-19,-23,-61,-35,-62,-43,-22,-24,-63,-44,-31,-34,-18,-76,-30,-54,-51,-53,-21,-20,-64,-33,-42,-41,-52,-36,-50,-49,-45,-79,-48,-47,-46,]),'IMPLEMENTATION':([0,1,2,3,4,5,7,9,10,16,17,18,20,22,24,25,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,70,75,79,80,85,86,94,105,107,109,115,118,122,123,130,133,134,137,138,139,140,143,146,148,149,156,157,158,161,167,169,170,171,172,173,174,175,],[15,-6,-11,-4,-88,-85,-12,-5,-3,-8,-13,15,-9,-14,-10,-7,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,-32,-84,-77,-29,-19,-23,-61,-35,-62,-43,-22,-24,-63,-44,-31,-34,-18,-76,-30,-54,-51,-53,-21,-20,-64,-33,-42,-41,-52,-36,-50,-49,-45,-79,-48,-47,-46,]),'$end':([1,2,3,4,5,7,9,10,12,16,17,18,20,22,24,25,27,37,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,70,75,79,80,85,86,94,105,107,109,115,118,122,123,130,133,134,137,138,139,140,143,146,148,149,156,157,158,161,167,169,170,171,172,173,174,175,],[-6,-11,-4,-88,-85,-12,-5,-3,0,-8,-13,-2,-9,-14,-10,-7,-89,-1,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,-32,-84,-77,-29,-19,-23,-61,-35,-62,-43,-22,-24,-63,-44,-31,-34,-18,-76,-30,-54,-51,-53,-21,-20,-64,-33,-42,-41,-52,-36,-50,-49,-45,-79,-48,-47,-46,]),'REGEX':([32,39,63,72,95,108,113,136,141,142,145,159,160,164,],[50,50,50,50,50,50,50,158,50,50,50,50,50,50,]),'INDEX':([0,1,2,3,4,5,7,9,10,16,17,18,20,22,24,25,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,70,75,79,80,85,86,94,105,107,109,115,118,122,123,130,133,134,137,138,139,140,143,146,148,149,156,157,158,161,167,169,170,171,172,173,174,175,],[13,-6,-11,-4,-88,-85,-12,-5,-3,-8,-13,13,-9,-14,-10,-7,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,-32,-84,-77,-29,-19,-23,-61,-35,-62,-43,-22,-24,-63,-44,-31,-34,-18,-76,-30,-54,-51,-53,-21,-20,-64,-33,-42,-41,-52,-36,-50,-49,-45,-79,-48,-47,-46,]),'NOT':([113,136,141,142,159,160,],[141,141,141,141,141,141,]),'OR':([4,5,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,75,94,107,122,138,139,140,143,149,157,161,162,169,170,171,172,173,174,175,],[-88,-85,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-84,-61,-62,-63,159,-54,-51,-53,-64,159,159,159,159,159,-45,-79,-48,-47,-46,]),'FALSE':([32,39,63,72,95,108,113,136,141,142,145,159,160,164,],[52,52,52,52,52,52,139,139,139,139,52,139,139,52,]),':':([4,5,26,27,30,36,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,68,75,76,87,88,94,97,99,106,107,122,147,149,],[-88,-85,-80,-89,44,71,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,98,-84,-81,-83,120,-61,128,71,71,-62,-63,-82,-64,]),'TRUE':([32,39,63,72,95,108,113,136,141,142,145,159,160,164,],[61,61,61,61,61,61,143,143,143,143,61,143,143,61,]),'EXTENDS':([30,],[45,]),'INT':([32,39,63,68,72,95,98,108,113,128,136,141,142,145,159,160,164,],[55,55,55,97,55,55,129,55,55,154,55,55,55,55,55,55,55,]),'STRING':([32,39,63,72,95,108,113,136,141,142,145,159,160,164,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'CID':([0,1,2,3,4,5,6,7,8,9,10,13,16,17,18,20,22,23,24,25,27,32,39,40,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,69,70,71,72,75,77,79,80,85,86,90,94,95,101,102,105,107,108,109,113,115,118,119,122,123,126,127,130,133,134,136,137,138,139,140,141,142,143,146,148,149,153,155,156,157,158,159,160,161,164,167,168,169,170,171,172,173,174,175,],[26,-6,-11,-4,-88,-85,26,-12,30,-5,-3,26,-8,-13,26,-9,-14,41,-10,-7,-89,26,26,76,26,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,26,26,-32,26,26,-84,26,-77,-29,-19,-23,76,-61,26,26,26,-35,-62,26,-43,26,-22,-24,26,-63,-44,26,-37,-31,-34,-18,26,-76,-30,-54,-51,26,26,-53,-21,-20,-64,-38,-40,-33,-42,-41,26,26,-52,26,-36,-39,-50,-49,-45,-79,-48,-47,-46,]),'SEP':([5,21,29,58,75,79,81,103,110,172,],[-85,40,40,90,-84,111,111,40,111,111,]),'FOR':([0,1,2,3,4,5,7,9,10,16,17,18,20,22,24,25,27,36,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,70,71,75,79,80,85,86,94,101,102,105,107,109,115,118,122,123,130,133,134,137,138,139,140,143,146,148,149,156,157,158,161,167,169,170,171,172,173,174,175,],[19,-6,-11,-4,-88,-85,-12,-5,-3,-8,-13,19,-9,-14,-10,-7,-89,69,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,-32,19,-84,-77,-29,-19,-23,-61,19,19,-35,-62,-43,-22,-24,-63,-44,-31,-34,-18,-76,-30,-54,-51,-53,-21,-20,-64,-33,-42,-41,-52,-36,-50,-49,-45,-79,-48,-47,-46,]),'MLS':([0,1,2,3,4,5,7,9,10,16,17,18,20,22,24,25,27,32,39,44,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,70,71,72,75,79,80,85,86,94,95,105,107,108,109,113,115,118,120,122,123,130,133,134,136,137,138,139,140,141,142,143,145,146,148,149,156,157,158,159,160,161,164,167,169,170,171,172,173,174,175,],[4,-6,-11,-4,4,-85,-12,-5,-3,-8,-13,4,-9,-14,-10,-7,-89,4,4,4,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,4,-32,4,4,-84,-77,-29,-19,-23,-61,4,-35,-62,4,-43,4,-22,-24,4,-63,-44,-31,-34,-18,4,-76,-30,-54,-51,4,4,-53,4,-21,-20,-64,-33,-42,-41,4,4,-52,4,-36,-50,-49,-45,-79,-48,-47,-46,]),'FLOAT':([32,39,63,72,95,108,113,136,141,142,145,159,160,164,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'AS':([41,42,],[77,78,]),',':([4,5,26,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,74,75,76,79,87,93,94,107,122,125,149,],[-88,-85,-80,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,108,-84,-81,112,119,124,-61,-62,-63,151,-64,]),'.':([5,11,21,46,48,58,75,103,172,173,],[-85,31,-79,-78,31,-79,-84,-79,-79,31,]),'ID':([0,1,2,3,4,5,6,7,9,10,13,14,15,16,17,18,19,20,22,23,24,25,26,27,31,32,34,39,40,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,89,90,94,95,101,102,105,107,108,109,111,112,113,114,115,116,117,118,119,120,122,123,124,126,127,130,133,134,136,137,138,139,140,141,142,143,146,148,149,151,152,153,155,156,157,158,159,160,161,163,164,165,167,168,169,170,171,172,173,174,175,],[5,-6,-11,-4,-88,-85,5,-12,-5,-3,5,35,36,-8,-13,5,38,-9,-14,42,-10,-7,-80,-89,46,5,66,5,75,5,5,5,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,5,93,5,-32,5,5,-84,-81,5,5,-77,-29,114,-26,5,5,-19,-23,66,75,-61,5,5,5,-35,-62,5,-43,75,5,5,-27,-22,-25,5,-24,5,5,-63,-44,93,5,-37,-31,-34,-18,5,-76,-30,-54,-51,5,5,-53,-21,-20,-64,66,167,-38,-40,-33,-42,-41,5,5,-52,5,5,-28,-36,-39,-50,-49,-45,-79,-48,-47,-46,]),'IMPLEMENT':([0,1,2,3,4,5,7,9,10,16,17,18,20,22,24,25,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,70,75,79,80,85,86,94,105,107,109,115,118,122,123,130,133,134,137,138,139,140,143,146,148,149,156,157,158,161,167,169,170,171,172,173,174,175,],[6,-6,-11,-4,-88,-85,-12,-5,-3,-8,-13,6,-9,-14,-10,-7,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,-32,-84,-77,-29,-19,-23,-61,-35,-62,-43,-22,-24,-63,-44,-31,-34,-18,-76,-30,-54,-51,-53,-21,-20,-64,-33,-42,-41,-52,-36,-50,-49,-45,-79,-48,-47,-46,]),'(':([5,14,21,26,33,51,58,75,76,100,103,113,136,141,142,159,160,],[-85,34,39,-80,64,34,39,-84,-81,34,39,142,142,142,142,142,142,]),'WHEN':([5,75,79,80,137,],[-85,-84,-77,113,-76,]),'MATCHING':([5,75,110,],[-85,-84,136,]),')':([4,5,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,65,73,74,75,92,93,94,107,122,125,135,139,140,143,149,150,161,162,166,169,170,171,172,173,174,175,],[-88,-85,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,94,107,-75,-84,123,-87,-61,-62,-63,-73,-74,-54,-51,-53,-64,-86,-52,171,-72,-50,-49,-45,-79,-48,-47,-46,]),'USING':([26,28,76,],[-80,43,-81,]),'CMP_OP':([4,5,27,46,47,48,49,50,53,55,56,57,58,59,60,75,94,107,122,139,140,143,144,149,158,],[-88,-85,-89,-78,-58,-59,-60,-70,-55,-67,-71,-69,-79,-68,-57,-84,-61,-62,-63,-66,-56,-65,164,-64,-70,]),']':([4,5,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,74,75,91,94,97,107,121,122,125,128,129,135,149,154,166,],[-88,-85,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-75,-84,122,-61,127,-62,149,-63,-73,153,155,-74,-64,168,-72,]),'IN':([4,5,27,38,46,47,48,49,50,53,55,56,57,58,59,60,75,94,107,122,139,140,143,144,149,158,],[-88,-85,-89,72,-78,-58,-59,-60,-70,-55,-67,-71,-69,-79,-68,-57,-84,-61,-62,-63,-66,-56,-65,163,-64,-70,]),'AND':([4,5,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,75,94,107,122,138,139,140,143,149,157,161,162,169,170,171,172,173,174,175,],[-88,-85,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-84,-61,-62,-63,160,-54,-51,-53,-64,160,160,160,160,160,-45,-79,-48,-47,-46,]),'[':([26,32,35,39,51,63,72,76,95,96,108,113,136,141,142,159,160,163,164,],[-80,63,68,63,89,63,63,-81,63,68,63,63,63,63,63,63,63,63,63,]),'END':([2,4,5,7,17,22,27,44,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,71,75,82,83,84,94,102,104,105,107,114,116,117,120,122,131,132,133,134,149,156,165,],[-11,-88,-85,-12,-13,-14,-89,86,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,105,-84,-26,115,118,-61,-16,133,-35,-62,-27,-25,146,86,-63,156,-15,-34,-18,-64,-33,-28,]),'ENTITY':([0,1,2,3,4,5,7,9,10,16,17,18,20,22,24,25,27,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,70,75,79,80,85,86,94,105,107,109,115,118,122,123,130,133,134,137,138,139,140,143,146,148,149,156,157,158,161,167,169,170,171,172,173,174,175,],[8,-6,-11,-4,-88,-85,-12,-5,-3,-8,-13,8,-9,-14,-10,-7,-89,-78,-58,-59,-60,-70,-66,-55,-56,-67,-71,-69,-79,-68,-57,-65,-17,-32,-84,-77,-29,-19,-23,-61,-35,-62,-43,-22,-24,-63,-44,-31,-34,-18,-76,-30,-54,-51,-53,-21,-20,-64,-33,-42,-41,-52,-36,-50,-49,-45,-79,-48,-47,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'implement_def':([0,18,],[9,9,]),'multi':([35,96,],[67,126,]),'condition':([113,136,141,142,159,160,],[138,157,161,162,169,170,]),'var_ref':([0,18,32,39,63,71,72,95,101,102,108,113,136,141,142,159,160,163,164,],[11,11,48,48,48,11,48,48,11,11,48,48,48,48,48,48,48,173,48,]),'index_lookup':([32,39,63,72,95,108,113,136,141,142,159,160,164,],[49,49,49,49,49,49,49,49,49,49,49,49,49,]),'implementation':([36,99,106,],[70,130,134,]),'main':([0,18,],[12,37,]),'operand_list':([39,63,108,],[73,91,135,]),'attr':([44,83,84,117,120,],[82,116,82,116,82,]),'class_ref_list':([45,119,],[88,147,]),'implementation_def':([0,18,],[1,1,]),'class_ref':([0,6,13,18,32,39,45,63,69,71,72,77,95,101,102,108,113,119,126,136,141,142,159,160,164,],[14,28,33,14,51,51,87,51,99,100,51,100,51,100,100,51,51,87,152,51,51,51,51,51,51,]),'stmt_list':([71,101,102,],[104,131,132,]),'constant':([32,39,63,72,95,108,113,136,141,142,145,159,160,164,],[53,53,53,53,53,53,53,53,53,53,165,53,53,53,]),'function_call':([0,18,32,39,63,71,72,95,101,102,108,113,136,141,142,159,160,164,],[17,17,54,54,54,17,54,54,17,17,54,140,140,140,140,140,140,54,]),'top_stmt':([0,18,],[18,18,]),'index':([0,18,],[24,24,]),'relation':([0,18,],[25,25,]),'statement':([0,18,71,101,102,],[16,16,102,102,102,]),'entity_def':([0,18,],[3,3,]),'ns_ref':([0,6,13,18,32,39,43,44,45,63,69,71,72,77,78,83,84,95,101,102,108,112,113,117,119,120,126,136,141,142,159,160,163,164,],[21,29,29,21,58,58,79,81,29,58,29,103,58,29,110,81,81,58,103,103,58,79,58,81,29,81,29,58,58,58,58,58,172,58,]),'id_list':([64,124,],[92,150,]),'for':([0,18,71,101,102,],[22,22,22,22,22,]),'typedef':([0,18,],[20,20,]),'param_list':([34,89,151,],[65,121,166,]),'entity_body':([44,84,120,],[83,117,83,]),'mls':([0,4,18,32,39,44,63,71,72,95,108,113,120,136,141,142,145,159,160,164,],[10,27,10,57,57,84,57,101,57,57,57,57,84,57,57,57,57,57,57,57,]),'constructor':([0,18,32,39,63,71,72,77,95,101,102,108,113,136,141,142,159,160,164,],[7,7,60,60,60,7,60,109,60,7,7,60,60,60,60,60,60,60,60,]),'list_def':([32,39,63,72,95,108,113,136,141,142,159,160,163,164,],[47,47,47,47,47,47,47,47,47,47,47,47,174,47,]),'ns_list':([43,112,],[80,137,]),'operand':([32,39,63,72,95,108,113,136,141,142,159,160,164,],[62,74,74,106,125,74,144,144,144,144,144,144,175,]),'entity_body_outer':([44,120,],[85,148,]),'assign':([0,18,71,101,102,],[2,2,2,2,2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',37),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',44),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',49),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',50),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',51),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',52),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',53),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',54),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',55),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',56),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',65),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',66),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',67),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',68),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',73),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',80),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',85),
  ('for -> FOR ID IN operand implementation','for',5,'p_for','plyInmantaParser.py',91),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',100),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',106),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',112),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',117),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',122),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',127),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',132),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',138),
  ('attr -> ns_ref ID','attr',2,'p_attr','plyInmantaParser.py',143),
  ('attr -> ns_ref ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',149),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',157),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',163),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',171),
  ('implementation_def -> IMPLEMENTATION ID implementation','implementation_def',3,'p_implementation_def_2','plyInmantaParser.py',177),
  ('implementation -> : mls stmt_list END','implementation',4,'p_implementation','plyInmantaParser.py',183),
  ('implementation -> : stmt_list END','implementation',3,'p_implementation_1','plyInmantaParser.py',188),
  ('implementation -> : END','implementation',2,'p_implementation_2','plyInmantaParser.py',193),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',200),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',206),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',211),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',216),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',221),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef',6,'p_typedef_1','plyInmantaParser.py',228),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING condition','typedef',6,'p_typedef_1','plyInmantaParser.py',229),
  ('typedef -> TYPEDEF CID AS constructor','typedef',4,'p_typedef_cls','plyInmantaParser.py',235),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',242),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',251),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',256),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',257),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',258),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',259),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',260),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',267),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',272),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',278),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',279),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',289),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',290),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',291),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',292),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',293),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',294),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',299),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',305),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',311),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',317),
  ('constant -> TRUE','constant',1,'p_constant','plyInmantaParser.py',325),
  ('constant -> FALSE','constant',1,'p_constant','plyInmantaParser.py',326),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',327),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',328),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',329),
  ('constant -> REGEX','constant',1,'p_constant','plyInmantaParser.py',330),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',339),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',374),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',380),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',385),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',391),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',396),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',402),
  ('var_ref -> var_ref . ID','var_ref',3,'p_var_ref','plyInmantaParser.py',407),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',413),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',419),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',424),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',429),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',435),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',440),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',445),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',450),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',456),
  ('mls -> MLS','mls',1,'p_mls_term','plyInmantaParser.py',461),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',466),
]
